plugins {
    id 'application'
}

dependencies {
	api project(':de.fraunhofer.ipa.ros.xtext')
	api "org.eclipse.xtext:org.eclipse.xtext.ide:${xtextVersion}"
}


application {
	// Add a start script for the socket case
	mainClass = 'de.fraunhofer.ipa.ros.ide.launch.ServerLauncher'
	startScripts {
		applicationName = 'ros-lsp-socket'
	}
}


// Add another start script for the standalone / self-contained case
task standaloneStartScript(type: CreateStartScripts) {
	mainClass = 'org.eclipse.xtext.ide.server.ServerLauncher'
	applicationName = 'ros-lsp-standalone'
	def t = project.tasks.getByPath('startScripts');
    classpath = t.classpath;
    outputDir = t.outputDir;
}

def t = project.tasks.getByPath('startScripts')
t.dependsOn(standaloneStartScript) // trigger 'secondaryStartScript' execution automatically