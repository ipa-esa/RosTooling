/*
 * generated by Xtext 2.25.0
 */
parser grammar InternalRosSystemParser;

options {
	tokenVocab=InternalRosSystemLexer;
	superClass=AbstractInternalContentAssistParser;
}

@header {
package de.fraunhofer.ipa.rossystem.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import de.fraunhofer.ipa.rossystem.services.RosSystemGrammarAccess;

}
@members {
	private RosSystemGrammarAccess grammarAccess;
	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
	
	{
		tokenNameToValue.put("Comma", "','");
		tokenNameToValue.put("Colon", "':'");
		tokenNameToValue.put("LeftCurlyBracket", "'{'");
		tokenNameToValue.put("RightCurlyBracket", "'}'");
		tokenNameToValue.put("Any", "'Any'");
		tokenNameToValue.put("Date", "'Date'");
		tokenNameToValue.put("List", "'List'");
		tokenNameToValue.put("Name", "'name'");
		tokenNameToValue.put("Type", "'type'");
		tokenNameToValue.put("Array", "'Array'");
		tokenNameToValue.put("From", "'from:'");
		tokenNameToValue.put("Parts", "'parts'");
		tokenNameToValue.put("Value", "'value'");
		tokenNameToValue.put("Base64", "'Base64'");
		tokenNameToValue.put("Double", "'Double'");
		tokenNameToValue.put("String", "'String'");
		tokenNameToValue.put("Struct", "'Struct'");
		tokenNameToValue.put("Boolean", "'Boolean'");
		tokenNameToValue.put("Integer", "'Integer'");
		tokenNameToValue.put("Default", "'default'");
		tokenNameToValue.put("GraphName", "'GraphName'");
		tokenNameToValue.put("NameSpace", "'NameSpace'");
		tokenNameToValue.put("Parameter", "'Parameter'");
		tokenNameToValue.put("ParameterAny", "'ParameterAny'");
		tokenNameToValue.put("GlobalNamespace", "'GlobalNamespace'");
		tokenNameToValue.put("PrivateNamespace", "'PrivateNamespace'");
		tokenNameToValue.put("RelativeNamespace", "'RelativeNamespace'");
	}

	public void setGrammarAccess(RosSystemGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		String result = tokenNameToValue.get(tokenName);
		if (result == null)
			result = tokenName;
		return result;
	}
}

// Entry rule entryRuleRosSystem
entryRuleRosSystem
:
{ before(grammarAccess.getRosSystemRule()); }
	 ruleRosSystem
{ after(grammarAccess.getRosSystemRule()); } 
	 EOF 
;

// Rule RosSystem
ruleRosSystem 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRosSystemAccess().getGroup()); }
		(rule__RosSystem__Group__0)
		{ after(grammarAccess.getRosSystemAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRosNode
entryRuleRosNode
:
{ before(grammarAccess.getRosNodeRule()); }
	 ruleRosNode
{ after(grammarAccess.getRosNodeRule()); } 
	 EOF 
;

// Rule RosNode
ruleRosNode 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRosNodeAccess().getGroup()); }
		(rule__RosNode__Group__0)
		{ after(grammarAccess.getRosNodeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterType
entryRuleParameterType
:
{ before(grammarAccess.getParameterTypeRule()); }
	 ruleParameterType
{ after(grammarAccess.getParameterTypeRule()); } 
	 EOF 
;

// Rule ParameterType
ruleParameterType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterTypeAccess().getAlternatives()); }
		(rule__ParameterType__Alternatives)
		{ after(grammarAccess.getParameterTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterValue
entryRuleParameterValue
:
{ before(grammarAccess.getParameterValueRule()); }
	 ruleParameterValue
{ after(grammarAccess.getParameterValueRule()); } 
	 EOF 
;

// Rule ParameterValue
ruleParameterValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterValueAccess().getAlternatives()); }
		(rule__ParameterValue__Alternatives)
		{ after(grammarAccess.getParameterValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterListType
entryRuleParameterListType
:
{ before(grammarAccess.getParameterListTypeRule()); }
	 ruleParameterListType
{ after(grammarAccess.getParameterListTypeRule()); } 
	 EOF 
;

// Rule ParameterListType
ruleParameterListType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListTypeAccess().getGroup()); }
		(rule__ParameterListType__Group__0)
		{ after(grammarAccess.getParameterListTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterStructType
entryRuleParameterStructType
:
{ before(grammarAccess.getParameterStructTypeRule()); }
	 ruleParameterStructType
{ after(grammarAccess.getParameterStructTypeRule()); } 
	 EOF 
;

// Rule ParameterStructType
ruleParameterStructType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterStructTypeAccess().getGroup()); }
		(rule__ParameterStructType__Group__0)
		{ after(grammarAccess.getParameterStructTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterIntegerType
entryRuleParameterIntegerType
:
{ before(grammarAccess.getParameterIntegerTypeRule()); }
	 ruleParameterIntegerType
{ after(grammarAccess.getParameterIntegerTypeRule()); } 
	 EOF 
;

// Rule ParameterIntegerType
ruleParameterIntegerType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterIntegerTypeAccess().getGroup()); }
		(rule__ParameterIntegerType__Group__0)
		{ after(grammarAccess.getParameterIntegerTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterStringType
entryRuleParameterStringType
:
{ before(grammarAccess.getParameterStringTypeRule()); }
	 ruleParameterStringType
{ after(grammarAccess.getParameterStringTypeRule()); } 
	 EOF 
;

// Rule ParameterStringType
ruleParameterStringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterStringTypeAccess().getGroup()); }
		(rule__ParameterStringType__Group__0)
		{ after(grammarAccess.getParameterStringTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDoubleType
entryRuleParameterDoubleType
:
{ before(grammarAccess.getParameterDoubleTypeRule()); }
	 ruleParameterDoubleType
{ after(grammarAccess.getParameterDoubleTypeRule()); } 
	 EOF 
;

// Rule ParameterDoubleType
ruleParameterDoubleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDoubleTypeAccess().getGroup()); }
		(rule__ParameterDoubleType__Group__0)
		{ after(grammarAccess.getParameterDoubleTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterBooleanType
entryRuleParameterBooleanType
:
{ before(grammarAccess.getParameterBooleanTypeRule()); }
	 ruleParameterBooleanType
{ after(grammarAccess.getParameterBooleanTypeRule()); } 
	 EOF 
;

// Rule ParameterBooleanType
ruleParameterBooleanType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterBooleanTypeAccess().getGroup()); }
		(rule__ParameterBooleanType__Group__0)
		{ after(grammarAccess.getParameterBooleanTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterBase64Type
entryRuleParameterBase64Type
:
{ before(grammarAccess.getParameterBase64TypeRule()); }
	 ruleParameterBase64Type
{ after(grammarAccess.getParameterBase64TypeRule()); } 
	 EOF 
;

// Rule ParameterBase64Type
ruleParameterBase64Type 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterBase64TypeAccess().getGroup()); }
		(rule__ParameterBase64Type__Group__0)
		{ after(grammarAccess.getParameterBase64TypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterArrayType
entryRuleParameterArrayType
:
{ before(grammarAccess.getParameterArrayTypeRule()); }
	 ruleParameterArrayType
{ after(grammarAccess.getParameterArrayTypeRule()); } 
	 EOF 
;

// Rule ParameterArrayType
ruleParameterArrayType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterArrayTypeAccess().getGroup()); }
		(rule__ParameterArrayType__Group__0)
		{ after(grammarAccess.getParameterArrayTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterList
entryRuleParameterList
:
{ before(grammarAccess.getParameterListRule()); }
	 ruleParameterList
{ after(grammarAccess.getParameterListRule()); } 
	 EOF 
;

// Rule ParameterList
ruleParameterList 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterListAccess().getGroup()); }
		(rule__ParameterList__Group__0)
		{ after(grammarAccess.getParameterListAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterAny
entryRuleParameterAny
:
{ before(grammarAccess.getParameterAnyRule()); }
	 ruleParameterAny
{ after(grammarAccess.getParameterAnyRule()); } 
	 EOF 
;

// Rule ParameterAny
ruleParameterAny 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAnyAccess().getGroup()); }
		(rule__ParameterAny__Group__0)
		{ after(grammarAccess.getParameterAnyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterString
entryRuleParameterString
:
{ before(grammarAccess.getParameterStringRule()); }
	 ruleParameterString
{ after(grammarAccess.getParameterStringRule()); } 
	 EOF 
;

// Rule ParameterString
ruleParameterString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterStringAccess().getValueAssignment()); }
		(rule__ParameterString__ValueAssignment)
		{ after(grammarAccess.getParameterStringAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterBase64
entryRuleParameterBase64
:
{ before(grammarAccess.getParameterBase64Rule()); }
	 ruleParameterBase64
{ after(grammarAccess.getParameterBase64Rule()); } 
	 EOF 
;

// Rule ParameterBase64
ruleParameterBase64 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterBase64Access().getValueAssignment()); }
		(rule__ParameterBase64__ValueAssignment)
		{ after(grammarAccess.getParameterBase64Access().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterInteger
entryRuleParameterInteger
:
{ before(grammarAccess.getParameterIntegerRule()); }
	 ruleParameterInteger
{ after(grammarAccess.getParameterIntegerRule()); } 
	 EOF 
;

// Rule ParameterInteger
ruleParameterInteger 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterIntegerAccess().getValueAssignment()); }
		(rule__ParameterInteger__ValueAssignment)
		{ after(grammarAccess.getParameterIntegerAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDouble
entryRuleParameterDouble
:
{ before(grammarAccess.getParameterDoubleRule()); }
	 ruleParameterDouble
{ after(grammarAccess.getParameterDoubleRule()); } 
	 EOF 
;

// Rule ParameterDouble
ruleParameterDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDoubleAccess().getValueAssignment()); }
		(rule__ParameterDouble__ValueAssignment)
		{ after(grammarAccess.getParameterDoubleAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterBoolean
entryRuleParameterBoolean
:
{ before(grammarAccess.getParameterBooleanRule()); }
	 ruleParameterBoolean
{ after(grammarAccess.getParameterBooleanRule()); } 
	 EOF 
;

// Rule ParameterBoolean
ruleParameterBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterBooleanAccess().getValueAssignment()); }
		(rule__ParameterBoolean__ValueAssignment)
		{ after(grammarAccess.getParameterBooleanAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterDate
entryRuleParameterDate
:
{ before(grammarAccess.getParameterDateRule()); }
	 ruleParameterDate
{ after(grammarAccess.getParameterDateRule()); } 
	 EOF 
;

// Rule ParameterDate
ruleParameterDate 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterDateAccess().getValueAssignment()); }
		(rule__ParameterDate__ValueAssignment)
		{ after(grammarAccess.getParameterDateAccess().getValueAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterStruct
entryRuleParameterStruct
:
{ before(grammarAccess.getParameterStructRule()); }
	 ruleParameterStruct
{ after(grammarAccess.getParameterStructRule()); } 
	 EOF 
;

// Rule ParameterStruct
ruleParameterStruct 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterStructAccess().getGroup()); }
		(rule__ParameterStruct__Group__0)
		{ after(grammarAccess.getParameterStructAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterStructMember
entryRuleParameterStructMember
:
{ before(grammarAccess.getParameterStructMemberRule()); }
	 ruleParameterStructMember
{ after(grammarAccess.getParameterStructMemberRule()); } 
	 EOF 
;

// Rule ParameterStructMember
ruleParameterStructMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterStructMemberAccess().getGroup()); }
		(rule__ParameterStructMember__Group__0)
		{ after(grammarAccess.getParameterStructMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameterStructTypeMember
entryRuleParameterStructTypeMember
:
{ before(grammarAccess.getParameterStructTypeMemberRule()); }
	 ruleParameterStructTypeMember
{ after(grammarAccess.getParameterStructTypeMemberRule()); } 
	 EOF 
;

// Rule ParameterStructTypeMember
ruleParameterStructTypeMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterStructTypeMemberAccess().getGroup()); }
		(rule__ParameterStructTypeMember__Group__0)
		{ after(grammarAccess.getParameterStructTypeMemberAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBase64Binary
entryRuleBase64Binary
:
{ before(grammarAccess.getBase64BinaryRule()); }
	 ruleBase64Binary
{ after(grammarAccess.getBase64BinaryRule()); } 
	 EOF 
;

// Rule Base64Binary
ruleBase64Binary 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBase64BinaryAccess().getBINARYTerminalRuleCall()); }
		RULE_BINARY
		{ after(grammarAccess.getBase64BinaryAccess().getBINARYTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleboolean0
entryRuleboolean0
:
{ before(grammarAccess.getBoolean0Rule()); }
	 ruleboolean0
{ after(grammarAccess.getBoolean0Rule()); } 
	 EOF 
;

// Rule boolean0
ruleboolean0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBoolean0Access().getBOOLEANTerminalRuleCall()); }
		RULE_BOOLEAN
		{ after(grammarAccess.getBoolean0Access().getBOOLEANTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDouble0
entryRuleDouble0
:
{ before(grammarAccess.getDouble0Rule()); }
	 ruleDouble0
{ after(grammarAccess.getDouble0Rule()); } 
	 EOF 
;

// Rule Double0
ruleDouble0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
		RULE_DOUBLE
		{ after(grammarAccess.getDouble0Access().getDOUBLETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInteger0
entryRuleInteger0
:
{ before(grammarAccess.getInteger0Rule()); }
	 ruleInteger0
{ after(grammarAccess.getInteger0Rule()); } 
	 EOF 
;

// Rule Integer0
ruleInteger0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInteger0Access().getDECINTTerminalRuleCall()); }
		RULE_DECINT
		{ after(grammarAccess.getInteger0Access().getDECINTTerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDateTime0
entryRuleDateTime0
:
{ before(grammarAccess.getDateTime0Rule()); }
	 ruleDateTime0
{ after(grammarAccess.getDateTime0Rule()); } 
	 EOF 
;

// Rule DateTime0
ruleDateTime0 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateTime0Access().getDATE_TIMETerminalRuleCall()); }
		RULE_DATE_TIME
		{ after(grammarAccess.getDateTime0Access().getDATE_TIMETerminalRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNamespace
entryRuleNamespace
:
{ before(grammarAccess.getNamespaceRule()); }
	 ruleNamespace
{ after(grammarAccess.getNamespaceRule()); } 
	 EOF 
;

// Rule Namespace
ruleNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNamespaceAccess().getAlternatives()); }
		(rule__Namespace__Alternatives)
		{ after(grammarAccess.getNamespaceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGlobalNamespace
entryRuleGlobalNamespace
:
{ before(grammarAccess.getGlobalNamespaceRule()); }
	 ruleGlobalNamespace
{ after(grammarAccess.getGlobalNamespaceRule()); } 
	 EOF 
;

// Rule GlobalNamespace
ruleGlobalNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalNamespaceAccess().getGroup()); }
		(rule__GlobalNamespace__Group__0)
		{ after(grammarAccess.getGlobalNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRelativeNamespace_Impl
entryRuleRelativeNamespace_Impl
:
{ before(grammarAccess.getRelativeNamespace_ImplRule()); }
	 ruleRelativeNamespace_Impl
{ after(grammarAccess.getRelativeNamespace_ImplRule()); } 
	 EOF 
;

// Rule RelativeNamespace_Impl
ruleRelativeNamespace_Impl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRelativeNamespace_ImplAccess().getGroup()); }
		(rule__RelativeNamespace_Impl__Group__0)
		{ after(grammarAccess.getRelativeNamespace_ImplAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePrivateNamespace
entryRulePrivateNamespace
:
{ before(grammarAccess.getPrivateNamespaceRule()); }
	 rulePrivateNamespace
{ after(grammarAccess.getPrivateNamespaceRule()); } 
	 EOF 
;

// Rule PrivateNamespace
rulePrivateNamespace 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPrivateNamespaceAccess().getGroup()); }
		(rule__PrivateNamespace__Group__0)
		{ after(grammarAccess.getPrivateNamespaceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGraphName
entryRuleGraphName
:
{ before(grammarAccess.getGraphNameRule()); }
	 ruleGraphName
{ after(grammarAccess.getGraphNameRule()); } 
	 EOF 
;

// Rule GraphName
ruleGraphName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGraphNameAccess().getGraphNameKeyword()); }
		GraphName
		{ after(grammarAccess.getGraphNameAccess().getGraphNameKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterListTypeParserRuleCall_0()); }
		ruleParameterListType
		{ after(grammarAccess.getParameterTypeAccess().getParameterListTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterStructTypeParserRuleCall_1()); }
		ruleParameterStructType
		{ after(grammarAccess.getParameterTypeAccess().getParameterStructTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterIntegerTypeParserRuleCall_2()); }
		ruleParameterIntegerType
		{ after(grammarAccess.getParameterTypeAccess().getParameterIntegerTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterStringTypeParserRuleCall_3()); }
		ruleParameterStringType
		{ after(grammarAccess.getParameterTypeAccess().getParameterStringTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterDoubleTypeParserRuleCall_4()); }
		ruleParameterDoubleType
		{ after(grammarAccess.getParameterTypeAccess().getParameterDoubleTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterBooleanTypeParserRuleCall_5()); }
		ruleParameterBooleanType
		{ after(grammarAccess.getParameterTypeAccess().getParameterBooleanTypeParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterBase64TypeParserRuleCall_6()); }
		ruleParameterBase64Type
		{ after(grammarAccess.getParameterTypeAccess().getParameterBase64TypeParserRuleCall_6()); }
	)
	|
	(
		{ before(grammarAccess.getParameterTypeAccess().getParameterArrayTypeParserRuleCall_7()); }
		ruleParameterArrayType
		{ after(grammarAccess.getParameterTypeAccess().getParameterArrayTypeParserRuleCall_7()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterStringParserRuleCall_0()); }
		ruleParameterString
		{ after(grammarAccess.getParameterValueAccess().getParameterStringParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterBase64ParserRuleCall_1()); }
		ruleParameterBase64
		{ after(grammarAccess.getParameterValueAccess().getParameterBase64ParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterIntegerParserRuleCall_2()); }
		ruleParameterInteger
		{ after(grammarAccess.getParameterValueAccess().getParameterIntegerParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterDoubleParserRuleCall_3()); }
		ruleParameterDouble
		{ after(grammarAccess.getParameterValueAccess().getParameterDoubleParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterBooleanParserRuleCall_4()); }
		ruleParameterBoolean
		{ after(grammarAccess.getParameterValueAccess().getParameterBooleanParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterListParserRuleCall_5()); }
		ruleParameterList
		{ after(grammarAccess.getParameterValueAccess().getParameterListParserRuleCall_5()); }
	)
	|
	(
		{ before(grammarAccess.getParameterValueAccess().getParameterStructParserRuleCall_6()); }
		ruleParameterStruct
		{ after(grammarAccess.getParameterValueAccess().getParameterStructParserRuleCall_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Namespace__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNamespaceAccess().getGlobalNamespaceParserRuleCall_0()); }
		ruleGlobalNamespace
		{ after(grammarAccess.getNamespaceAccess().getGlobalNamespaceParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceAccess().getRelativeNamespace_ImplParserRuleCall_1()); }
		ruleRelativeNamespace_Impl
		{ after(grammarAccess.getNamespaceAccess().getRelativeNamespace_ImplParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNamespaceAccess().getPrivateNamespaceParserRuleCall_2()); }
		rulePrivateNamespace
		{ after(grammarAccess.getNamespaceAccess().getPrivateNamespaceParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosSystem__Group__0__Impl
	rule__RosSystem__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosSystemAccess().getRosSystemAction_0()); }
	()
	{ after(grammarAccess.getRosSystemAccess().getRosSystemAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosSystem__Group__1__Impl
	rule__RosSystem__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosSystemAccess().getNameAssignment_1()); }
	(rule__RosSystem__NameAssignment_1)
	{ after(grammarAccess.getRosSystemAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosSystem__Group__2__Impl
	rule__RosSystem__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosSystemAccess().getColonKeyword_2()); }
	Colon
	{ after(grammarAccess.getRosSystemAccess().getColonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosSystem__Group__3__Impl
	rule__RosSystem__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosSystemAccess().getBEGINTerminalRuleCall_3()); }
	RULE_BEGIN
	{ after(grammarAccess.getRosSystemAccess().getBEGINTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosSystem__Group__4__Impl
	rule__RosSystem__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosSystemAccess().getRosnodeAssignment_4()); }
	(rule__RosSystem__RosnodeAssignment_4)
	{ after(grammarAccess.getRosSystemAccess().getRosnodeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosSystem__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosSystemAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getRosSystemAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RosNode__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosNode__Group__0__Impl
	rule__RosNode__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosNodeAccess().getNameAssignment_0()); }
	(rule__RosNode__NameAssignment_0)
	{ after(grammarAccess.getRosNodeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosNode__Group__1__Impl
	rule__RosNode__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosNodeAccess().getColonKeyword_1()); }
	Colon
	{ after(grammarAccess.getRosNodeAccess().getColonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosNode__Group__2__Impl
	rule__RosNode__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosNodeAccess().getBEGINTerminalRuleCall_2()); }
	RULE_BEGIN
	{ after(grammarAccess.getRosNodeAccess().getBEGINTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosNode__Group__3__Impl
	rule__RosNode__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosNodeAccess().getFromKeyword_3()); }
	From
	{ after(grammarAccess.getRosNodeAccess().getFromKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosNode__Group__4__Impl
	rule__RosNode__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosNodeAccess().getFromAssignment_4()); }
	(rule__RosNode__FromAssignment_4)
	{ after(grammarAccess.getRosNodeAccess().getFromAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RosNode__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRosNodeAccess().getENDTerminalRuleCall_5()); }
	RULE_END
	{ after(grammarAccess.getRosNodeAccess().getENDTerminalRuleCall_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterListType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group__0__Impl
	rule__ParameterListType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getParameterListTypeAction_0()); }
	()
	{ after(grammarAccess.getParameterListTypeAccess().getParameterListTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group__1__Impl
	rule__ParameterListType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getListKeyword_1()); }
	List
	{ after(grammarAccess.getParameterListTypeAccess().getListKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group__2__Impl
	rule__ParameterListType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterListTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group__3__Impl
	rule__ParameterListType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getSequenceAssignment_3()); }
	(rule__ParameterListType__SequenceAssignment_3)
	{ after(grammarAccess.getParameterListTypeAccess().getSequenceAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group__4__Impl
	rule__ParameterListType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getGroup_4()); }
	(rule__ParameterListType__Group_4__0)*
	{ after(grammarAccess.getParameterListTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getRightCurlyBracketKeyword_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterListTypeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterListType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group_4__0__Impl
	rule__ParameterListType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getParameterListTypeAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterListType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListTypeAccess().getSequenceAssignment_4_1()); }
	(rule__ParameterListType__SequenceAssignment_4_1)
	{ after(grammarAccess.getParameterListTypeAccess().getSequenceAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStructType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group__0__Impl
	rule__ParameterStructType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getParameterStructTypeAction_0()); }
	()
	{ after(grammarAccess.getParameterStructTypeAccess().getParameterStructTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group__1__Impl
	rule__ParameterStructType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getStructKeyword_1()); }
	Struct
	{ after(grammarAccess.getParameterStructTypeAccess().getStructKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group__2__Impl
	rule__ParameterStructType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterStructTypeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group__3__Impl
	rule__ParameterStructType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberAssignment_3()); }
	(rule__ParameterStructType__ParameterstructypetmemberAssignment_3)
	{ after(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group__4__Impl
	rule__ParameterStructType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getGroup_4()); }
	(rule__ParameterStructType__Group_4__0)*
	{ after(grammarAccess.getParameterStructTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getRightCurlyBracketKeyword_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterStructTypeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStructType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group_4__0__Impl
	rule__ParameterStructType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getCommaKeyword_4_0()); }
	Comma
	{ after(grammarAccess.getParameterStructTypeAccess().getCommaKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberAssignment_4_1()); }
	(rule__ParameterStructType__ParameterstructypetmemberAssignment_4_1)
	{ after(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIntegerType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterIntegerType__Group__0__Impl
	rule__ParameterIntegerType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterIntegerTypeAccess().getParameterIntegerTypeAction_0()); }
	()
	{ after(grammarAccess.getParameterIntegerTypeAccess().getParameterIntegerTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterIntegerType__Group__1__Impl
	rule__ParameterIntegerType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterIntegerTypeAccess().getIntegerKeyword_1()); }
	Integer
	{ after(grammarAccess.getParameterIntegerTypeAccess().getIntegerKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterIntegerType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterIntegerTypeAccess().getGroup_2()); }
	(rule__ParameterIntegerType__Group_2__0)?
	{ after(grammarAccess.getParameterIntegerTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterIntegerType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterIntegerType__Group_2__0__Impl
	rule__ParameterIntegerType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterIntegerTypeAccess().getDefaultKeyword_2_0()); }
	Default
	{ after(grammarAccess.getParameterIntegerTypeAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterIntegerType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterIntegerTypeAccess().getDefaultAssignment_2_1()); }
	(rule__ParameterIntegerType__DefaultAssignment_2_1)
	{ after(grammarAccess.getParameterIntegerTypeAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStringType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStringType__Group__0__Impl
	rule__ParameterStringType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStringTypeAccess().getParameterStringTypeAction_0()); }
	()
	{ after(grammarAccess.getParameterStringTypeAccess().getParameterStringTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStringType__Group__1__Impl
	rule__ParameterStringType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStringTypeAccess().getStringKeyword_1()); }
	String
	{ after(grammarAccess.getParameterStringTypeAccess().getStringKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStringType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStringTypeAccess().getGroup_2()); }
	(rule__ParameterStringType__Group_2__0)?
	{ after(grammarAccess.getParameterStringTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStringType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStringType__Group_2__0__Impl
	rule__ParameterStringType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStringTypeAccess().getDefaultKeyword_2_0()); }
	Default
	{ after(grammarAccess.getParameterStringTypeAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStringType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStringTypeAccess().getDefaultAssignment_2_1()); }
	(rule__ParameterStringType__DefaultAssignment_2_1)
	{ after(grammarAccess.getParameterStringTypeAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDoubleType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDoubleType__Group__0__Impl
	rule__ParameterDoubleType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDoubleTypeAccess().getParameterDoubleTypeAction_0()); }
	()
	{ after(grammarAccess.getParameterDoubleTypeAccess().getParameterDoubleTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDoubleType__Group__1__Impl
	rule__ParameterDoubleType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDoubleTypeAccess().getDoubleKeyword_1()); }
	Double
	{ after(grammarAccess.getParameterDoubleTypeAccess().getDoubleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDoubleType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDoubleTypeAccess().getGroup_2()); }
	(rule__ParameterDoubleType__Group_2__0)?
	{ after(grammarAccess.getParameterDoubleTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDoubleType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDoubleType__Group_2__0__Impl
	rule__ParameterDoubleType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDoubleTypeAccess().getDefaultKeyword_2_0()); }
	Default
	{ after(grammarAccess.getParameterDoubleTypeAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterDoubleType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterDoubleTypeAccess().getDefaultAssignment_2_1()); }
	(rule__ParameterDoubleType__DefaultAssignment_2_1)
	{ after(grammarAccess.getParameterDoubleTypeAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterBooleanType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBooleanType__Group__0__Impl
	rule__ParameterBooleanType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBooleanTypeAccess().getParameterBooleanTypeAction_0()); }
	()
	{ after(grammarAccess.getParameterBooleanTypeAccess().getParameterBooleanTypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBooleanType__Group__1__Impl
	rule__ParameterBooleanType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBooleanTypeAccess().getBooleanKeyword_1()); }
	Boolean
	{ after(grammarAccess.getParameterBooleanTypeAccess().getBooleanKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBooleanType__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBooleanTypeAccess().getGroup_2()); }
	(rule__ParameterBooleanType__Group_2__0)?
	{ after(grammarAccess.getParameterBooleanTypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterBooleanType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBooleanType__Group_2__0__Impl
	rule__ParameterBooleanType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBooleanTypeAccess().getDefaultKeyword_2_0()); }
	Default
	{ after(grammarAccess.getParameterBooleanTypeAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBooleanType__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBooleanTypeAccess().getDefaultAssignment_2_1()); }
	(rule__ParameterBooleanType__DefaultAssignment_2_1)
	{ after(grammarAccess.getParameterBooleanTypeAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterBase64Type__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBase64Type__Group__0__Impl
	rule__ParameterBase64Type__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBase64TypeAccess().getParameterBase64TypeAction_0()); }
	()
	{ after(grammarAccess.getParameterBase64TypeAccess().getParameterBase64TypeAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBase64Type__Group__1__Impl
	rule__ParameterBase64Type__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBase64TypeAccess().getBase64Keyword_1()); }
	Base64
	{ after(grammarAccess.getParameterBase64TypeAccess().getBase64Keyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBase64Type__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBase64TypeAccess().getGroup_2()); }
	(rule__ParameterBase64Type__Group_2__0)?
	{ after(grammarAccess.getParameterBase64TypeAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterBase64Type__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBase64Type__Group_2__0__Impl
	rule__ParameterBase64Type__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBase64TypeAccess().getDefaultKeyword_2_0()); }
	Default
	{ after(grammarAccess.getParameterBase64TypeAccess().getDefaultKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterBase64Type__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterBase64TypeAccess().getDefaultAssignment_2_1()); }
	(rule__ParameterBase64Type__DefaultAssignment_2_1)
	{ after(grammarAccess.getParameterBase64TypeAccess().getDefaultAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterArrayType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group__0__Impl
	rule__ParameterArrayType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getArrayKeyword_0()); }
	Array
	{ after(grammarAccess.getParameterArrayTypeAccess().getArrayKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group__1__Impl
	rule__ParameterArrayType__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterArrayTypeAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group__2__Impl
	rule__ParameterArrayType__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getTypeKeyword_2()); }
	Type
	{ after(grammarAccess.getParameterArrayTypeAccess().getTypeKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group__3__Impl
	rule__ParameterArrayType__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getTypeAssignment_3()); }
	(rule__ParameterArrayType__TypeAssignment_3)
	{ after(grammarAccess.getParameterArrayTypeAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group__4__Impl
	rule__ParameterArrayType__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getGroup_4()); }
	(rule__ParameterArrayType__Group_4__0)?
	{ after(grammarAccess.getParameterArrayTypeAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getRightCurlyBracketKeyword_5()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterArrayTypeAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterArrayType__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group_4__0__Impl
	rule__ParameterArrayType__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getDefaultKeyword_4_0()); }
	Default
	{ after(grammarAccess.getParameterArrayTypeAccess().getDefaultKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterArrayType__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterArrayTypeAccess().getDefaultAssignment_4_1()); }
	(rule__ParameterArrayType__DefaultAssignment_4_1)
	{ after(grammarAccess.getParameterArrayTypeAccess().getDefaultAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__0__Impl
	rule__ParameterList__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getParameterSequenceAction_0()); }
	()
	{ after(grammarAccess.getParameterListAccess().getParameterSequenceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__1__Impl
	rule__ParameterList__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterListAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__2__Impl
	rule__ParameterList__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getValueAssignment_2()); }
	(rule__ParameterList__ValueAssignment_2)
	{ after(grammarAccess.getParameterListAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__3__Impl
	rule__ParameterList__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getGroup_3()); }
	(rule__ParameterList__Group_3__0)*
	{ after(grammarAccess.getParameterListAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterListAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterList__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_3__0__Impl
	rule__ParameterList__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getCommaKeyword_3_0()); }
	Comma
	{ after(grammarAccess.getParameterListAccess().getCommaKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterList__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterListAccess().getValueAssignment_3_1()); }
	(rule__ParameterList__ValueAssignment_3_1)
	{ after(grammarAccess.getParameterListAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterAny__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group__0__Impl
	rule__ParameterAny__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getParameterAnyAction_0()); }
	()
	{ after(grammarAccess.getParameterAnyAccess().getParameterAnyAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group__1__Impl
	rule__ParameterAny__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getParameterAnyKeyword_1()); }
	ParameterAny
	{ after(grammarAccess.getParameterAnyAccess().getParameterAnyKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group__2__Impl
	rule__ParameterAny__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterAnyAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group__3__Impl
	rule__ParameterAny__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getGroup_3()); }
	(rule__ParameterAny__Group_3__0)?
	{ after(grammarAccess.getParameterAnyAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterAnyAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterAny__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group_3__0__Impl
	rule__ParameterAny__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getValueKeyword_3_0()); }
	Value
	{ after(grammarAccess.getParameterAnyAccess().getValueKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterAny__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAnyAccess().getValueAssignment_3_1()); }
	(rule__ParameterAny__ValueAssignment_3_1)
	{ after(grammarAccess.getParameterAnyAccess().getValueAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStruct__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group__0__Impl
	rule__ParameterStruct__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getParameterStructAction_0()); }
	()
	{ after(grammarAccess.getParameterStructAccess().getParameterStructAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getGroup_1()); }
	(rule__ParameterStruct__Group_1__0)?
	{ after(grammarAccess.getParameterStructAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStruct__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1__0__Impl
	rule__ParameterStruct__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getLeftCurlyBracketKeyword_1_0()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterStructAccess().getLeftCurlyBracketKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1__1__Impl
	rule__ParameterStruct__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getValueAssignment_1_1()); }
	(rule__ParameterStruct__ValueAssignment_1_1)
	{ after(grammarAccess.getParameterStructAccess().getValueAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1__2__Impl
	rule__ParameterStruct__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getGroup_1_2()); }
	(rule__ParameterStruct__Group_1_2__0)*
	{ after(grammarAccess.getParameterStructAccess().getGroup_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getRightCurlyBracketKeyword_1_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterStructAccess().getRightCurlyBracketKeyword_1_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStruct__Group_1_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1_2__0__Impl
	rule__ParameterStruct__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getCommaKeyword_1_2_0()); }
	Comma
	{ after(grammarAccess.getParameterStructAccess().getCommaKeyword_1_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1_2__1__Impl
	rule__ParameterStruct__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getLeftCurlyBracketKeyword_1_2_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterStructAccess().getLeftCurlyBracketKeyword_1_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1_2__2__Impl
	rule__ParameterStruct__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getValueAssignment_1_2_2()); }
	(rule__ParameterStruct__ValueAssignment_1_2_2)
	{ after(grammarAccess.getParameterStructAccess().getValueAssignment_1_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStruct__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__Group_1_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructAccess().getRightCurlyBracketKeyword_1_2_3()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterStructAccess().getRightCurlyBracketKeyword_1_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStructMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructMember__Group__0__Impl
	rule__ParameterStructMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructMemberAccess().getNameAssignment_0()); }
	(rule__ParameterStructMember__NameAssignment_0)
	{ after(grammarAccess.getParameterStructMemberAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructMember__Group__1__Impl
	rule__ParameterStructMember__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructMemberAccess().getLeftCurlyBracketKeyword_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getParameterStructMemberAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructMember__Group__2__Impl
	rule__ParameterStructMember__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructMemberAccess().getValueKeyword_2()); }
	Value
	{ after(grammarAccess.getParameterStructMemberAccess().getValueKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructMember__Group__3__Impl
	rule__ParameterStructMember__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructMemberAccess().getValueAssignment_3()); }
	(rule__ParameterStructMember__ValueAssignment_3)
	{ after(grammarAccess.getParameterStructMemberAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructMember__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructMemberAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getParameterStructMemberAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterStructTypeMember__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructTypeMember__Group__0__Impl
	rule__ParameterStructTypeMember__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructTypeMember__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeMemberAccess().getNameAssignment_0()); }
	(rule__ParameterStructTypeMember__NameAssignment_0)
	{ after(grammarAccess.getParameterStructTypeMemberAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructTypeMember__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ParameterStructTypeMember__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructTypeMember__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterStructTypeMemberAccess().getTypeAssignment_1()); }
	(rule__ParameterStructTypeMember__TypeAssignment_1)
	{ after(grammarAccess.getParameterStructTypeMemberAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalNamespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group__0__Impl
	rule__GlobalNamespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getGlobalNamespaceAction_0()); }
	()
	{ after(grammarAccess.getGlobalNamespaceAccess().getGlobalNamespaceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group__1__Impl
	rule__GlobalNamespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getGlobalNamespaceKeyword_1()); }
	GlobalNamespace
	{ after(grammarAccess.getGlobalNamespaceAccess().getGlobalNamespaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group__2__Impl
	rule__GlobalNamespace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getGlobalNamespaceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group__3__Impl
	rule__GlobalNamespace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getGroup_3()); }
	(rule__GlobalNamespace__Group_3__0)?
	{ after(grammarAccess.getGlobalNamespaceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getGlobalNamespaceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalNamespace__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3__0__Impl
	rule__GlobalNamespace__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getPartsKeyword_3_0()); }
	Parts
	{ after(grammarAccess.getGlobalNamespaceAccess().getPartsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3__1__Impl
	rule__GlobalNamespace__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getLeftCurlyBracketKeyword_3_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getGlobalNamespaceAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3__2__Impl
	rule__GlobalNamespace__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getPartsAssignment_3_2()); }
	(rule__GlobalNamespace__PartsAssignment_3_2)
	{ after(grammarAccess.getGlobalNamespaceAccess().getPartsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3__3__Impl
	rule__GlobalNamespace__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getGroup_3_3()); }
	(rule__GlobalNamespace__Group_3_3__0)*
	{ after(grammarAccess.getGlobalNamespaceAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getRightCurlyBracketKeyword_3_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getGlobalNamespaceAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__GlobalNamespace__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3_3__0__Impl
	rule__GlobalNamespace__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getCommaKeyword_3_3_0()); }
	Comma
	{ after(grammarAccess.getGlobalNamespaceAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__GlobalNamespace__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGlobalNamespaceAccess().getPartsAssignment_3_3_1()); }
	(rule__GlobalNamespace__PartsAssignment_3_3_1)
	{ after(grammarAccess.getGlobalNamespaceAccess().getPartsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeNamespace_Impl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group__0__Impl
	rule__RelativeNamespace_Impl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getRelativeNamespaceAction_0()); }
	()
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getRelativeNamespaceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group__1__Impl
	rule__RelativeNamespace_Impl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getRelativeNamespaceKeyword_1()); }
	RelativeNamespace
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getRelativeNamespaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group__2__Impl
	rule__RelativeNamespace_Impl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group__3__Impl
	rule__RelativeNamespace_Impl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getGroup_3()); }
	(rule__RelativeNamespace_Impl__Group_3__0)?
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeNamespace_Impl__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3__0__Impl
	rule__RelativeNamespace_Impl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getPartsKeyword_3_0()); }
	Parts
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getPartsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3__1__Impl
	rule__RelativeNamespace_Impl__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getLeftCurlyBracketKeyword_3_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3__2__Impl
	rule__RelativeNamespace_Impl__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getPartsAssignment_3_2()); }
	(rule__RelativeNamespace_Impl__PartsAssignment_3_2)
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getPartsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3__3__Impl
	rule__RelativeNamespace_Impl__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getGroup_3_3()); }
	(rule__RelativeNamespace_Impl__Group_3_3__0)*
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getRightCurlyBracketKeyword_3_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RelativeNamespace_Impl__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3_3__0__Impl
	rule__RelativeNamespace_Impl__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getCommaKeyword_3_3_0()); }
	Comma
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RelativeNamespace_Impl__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRelativeNamespace_ImplAccess().getPartsAssignment_3_3_1()); }
	(rule__RelativeNamespace_Impl__PartsAssignment_3_3_1)
	{ after(grammarAccess.getRelativeNamespace_ImplAccess().getPartsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrivateNamespace__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group__0__Impl
	rule__PrivateNamespace__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getPrivateNamespaceAction_0()); }
	()
	{ after(grammarAccess.getPrivateNamespaceAccess().getPrivateNamespaceAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group__1__Impl
	rule__PrivateNamespace__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getPrivateNamespaceKeyword_1()); }
	PrivateNamespace
	{ after(grammarAccess.getPrivateNamespaceAccess().getPrivateNamespaceKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group__2__Impl
	rule__PrivateNamespace__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getLeftCurlyBracketKeyword_2()); }
	LeftCurlyBracket
	{ after(grammarAccess.getPrivateNamespaceAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group__3__Impl
	rule__PrivateNamespace__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getGroup_3()); }
	(rule__PrivateNamespace__Group_3__0)?
	{ after(grammarAccess.getPrivateNamespaceAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getRightCurlyBracketKeyword_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getPrivateNamespaceAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrivateNamespace__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3__0__Impl
	rule__PrivateNamespace__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getPartsKeyword_3_0()); }
	Parts
	{ after(grammarAccess.getPrivateNamespaceAccess().getPartsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3__1__Impl
	rule__PrivateNamespace__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getLeftCurlyBracketKeyword_3_1()); }
	LeftCurlyBracket
	{ after(grammarAccess.getPrivateNamespaceAccess().getLeftCurlyBracketKeyword_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3__2__Impl
	rule__PrivateNamespace__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getPartsAssignment_3_2()); }
	(rule__PrivateNamespace__PartsAssignment_3_2)
	{ after(grammarAccess.getPrivateNamespaceAccess().getPartsAssignment_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3__3__Impl
	rule__PrivateNamespace__Group_3__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getGroup_3_3()); }
	(rule__PrivateNamespace__Group_3_3__0)*
	{ after(grammarAccess.getPrivateNamespaceAccess().getGroup_3_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getRightCurlyBracketKeyword_3_4()); }
	RightCurlyBracket
	{ after(grammarAccess.getPrivateNamespaceAccess().getRightCurlyBracketKeyword_3_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PrivateNamespace__Group_3_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3_3__0__Impl
	rule__PrivateNamespace__Group_3_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getCommaKeyword_3_3_0()); }
	Comma
	{ after(grammarAccess.getPrivateNamespaceAccess().getCommaKeyword_3_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PrivateNamespace__Group_3_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__Group_3_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPrivateNamespaceAccess().getPartsAssignment_3_3_1()); }
	(rule__PrivateNamespace__PartsAssignment_3_3_1)
	{ after(grammarAccess.getPrivateNamespaceAccess().getPartsAssignment_3_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RosSystem__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosSystemAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getRosSystemAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosSystem__RosnodeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosSystemAccess().getRosnodeRosNodeParserRuleCall_4_0()); }
		ruleRosNode
		{ after(grammarAccess.getRosSystemAccess().getRosnodeRosNodeParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosNodeAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getRosNodeAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RosNode__FromAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRosNodeAccess().getFromNodeCrossReference_4_0()); }
		(
			{ before(grammarAccess.getRosNodeAccess().getFromNodeEStringParserRuleCall_4_0_1()); }
			ruleEString
			{ after(grammarAccess.getRosNodeAccess().getFromNodeEStringParserRuleCall_4_0_1()); }
		)
		{ after(grammarAccess.getRosNodeAccess().getFromNodeCrossReference_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__SequenceAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListTypeAccess().getSequenceParameterTypeParserRuleCall_3_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterListTypeAccess().getSequenceParameterTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterListType__SequenceAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListTypeAccess().getSequenceParameterTypeParserRuleCall_4_1_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterListTypeAccess().getSequenceParameterTypeParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__ParameterstructypetmemberAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberParameterStructTypeMemberParserRuleCall_3_0()); }
		ruleParameterStructTypeMember
		{ after(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberParameterStructTypeMemberParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructType__ParameterstructypetmemberAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberParameterStructTypeMemberParserRuleCall_4_1_0()); }
		ruleParameterStructTypeMember
		{ after(grammarAccess.getParameterStructTypeAccess().getParameterstructypetmemberParameterStructTypeMemberParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterIntegerType__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterIntegerTypeAccess().getDefaultParameterIntegerParserRuleCall_2_1_0()); }
		ruleParameterInteger
		{ after(grammarAccess.getParameterIntegerTypeAccess().getDefaultParameterIntegerParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStringType__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStringTypeAccess().getDefaultParameterStringParserRuleCall_2_1_0()); }
		ruleParameterString
		{ after(grammarAccess.getParameterStringTypeAccess().getDefaultParameterStringParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDoubleType__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDoubleTypeAccess().getDefaultParameterDoubleParserRuleCall_2_1_0()); }
		ruleParameterDouble
		{ after(grammarAccess.getParameterDoubleTypeAccess().getDefaultParameterDoubleParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBooleanType__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterBooleanTypeAccess().getDefaultParameterBooleanParserRuleCall_2_1_0()); }
		ruleParameterBoolean
		{ after(grammarAccess.getParameterBooleanTypeAccess().getDefaultParameterBooleanParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64Type__DefaultAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterBase64TypeAccess().getDefaultParameterBase64ParserRuleCall_2_1_0()); }
		ruleParameterBase64
		{ after(grammarAccess.getParameterBase64TypeAccess().getDefaultParameterBase64ParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterArrayTypeAccess().getTypeParameterTypeParserRuleCall_3_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterArrayTypeAccess().getTypeParameterTypeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterArrayType__DefaultAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterArrayTypeAccess().getDefaultParameterListParserRuleCall_4_1_0()); }
		ruleParameterList
		{ after(grammarAccess.getParameterArrayTypeAccess().getDefaultParameterListParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getValueParameterValueParserRuleCall_2_0()); }
		ruleParameterValue
		{ after(grammarAccess.getParameterListAccess().getValueParameterValueParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterList__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterListAccess().getValueParameterValueParserRuleCall_3_1_0()); }
		ruleParameterValue
		{ after(grammarAccess.getParameterListAccess().getValueParameterValueParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterAny__ValueAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAnyAccess().getValueEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getParameterAnyAccess().getValueEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterString__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStringAccess().getValueEStringParserRuleCall_0()); }
		ruleEString
		{ after(grammarAccess.getParameterStringAccess().getValueEStringParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBase64__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterBase64Access().getValueBase64BinaryParserRuleCall_0()); }
		ruleBase64Binary
		{ after(grammarAccess.getParameterBase64Access().getValueBase64BinaryParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterInteger__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterIntegerAccess().getValueInteger0ParserRuleCall_0()); }
		ruleInteger0
		{ after(grammarAccess.getParameterIntegerAccess().getValueInteger0ParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDouble__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDoubleAccess().getValueDouble0ParserRuleCall_0()); }
		ruleDouble0
		{ after(grammarAccess.getParameterDoubleAccess().getValueDouble0ParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterBoolean__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterBooleanAccess().getValueBoolean0ParserRuleCall_0()); }
		ruleboolean0
		{ after(grammarAccess.getParameterBooleanAccess().getValueBoolean0ParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDate__ValueAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterDateAccess().getValueDateTime0ParserRuleCall_0()); }
		ruleDateTime0
		{ after(grammarAccess.getParameterDateAccess().getValueDateTime0ParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__ValueAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructAccess().getValueParameterStructMemberParserRuleCall_1_1_0()); }
		ruleParameterStructMember
		{ after(grammarAccess.getParameterStructAccess().getValueParameterStructMemberParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStruct__ValueAssignment_1_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructAccess().getValueParameterStructMemberParserRuleCall_1_2_2_0()); }
		ruleParameterStructMember
		{ after(grammarAccess.getParameterStructAccess().getValueParameterStructMemberParserRuleCall_1_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructMemberAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getParameterStructMemberAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructMember__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructMemberAccess().getValueParameterValueParserRuleCall_3_0()); }
		ruleParameterValue
		{ after(grammarAccess.getParameterStructMemberAccess().getValueParameterValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructTypeMember__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructTypeMemberAccess().getNameEStringParserRuleCall_0_0()); }
		ruleEString
		{ after(grammarAccess.getParameterStructTypeMemberAccess().getNameEStringParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterStructTypeMember__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterStructTypeMemberAccess().getTypeParameterTypeParserRuleCall_1_0()); }
		ruleParameterType
		{ after(grammarAccess.getParameterStructTypeMemberAccess().getTypeParameterTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__PartsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalNamespaceAccess().getPartsGraphNameParserRuleCall_3_2_0()); }
		ruleGraphName
		{ after(grammarAccess.getGlobalNamespaceAccess().getPartsGraphNameParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__GlobalNamespace__PartsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalNamespaceAccess().getPartsGraphNameParserRuleCall_3_3_1_0()); }
		ruleGraphName
		{ after(grammarAccess.getGlobalNamespaceAccess().getPartsGraphNameParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__PartsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelativeNamespace_ImplAccess().getPartsGraphNameParserRuleCall_3_2_0()); }
		ruleGraphName
		{ after(grammarAccess.getRelativeNamespace_ImplAccess().getPartsGraphNameParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RelativeNamespace_Impl__PartsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRelativeNamespace_ImplAccess().getPartsGraphNameParserRuleCall_3_3_1_0()); }
		ruleGraphName
		{ after(grammarAccess.getRelativeNamespace_ImplAccess().getPartsGraphNameParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__PartsAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrivateNamespaceAccess().getPartsGraphNameParserRuleCall_3_2_0()); }
		ruleGraphName
		{ after(grammarAccess.getPrivateNamespaceAccess().getPartsGraphNameParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PrivateNamespace__PartsAssignment_3_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPrivateNamespaceAccess().getPartsGraphNameParserRuleCall_3_3_1_0()); }
		ruleGraphName
		{ after(grammarAccess.getPrivateNamespaceAccess().getPartsGraphNameParserRuleCall_3_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}
