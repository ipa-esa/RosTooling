// automatically generated by Xtext
grammar de.fraunhofer.ipa.ros1.Ros1 with org.eclipse.xtext.common.Terminals

import "http://www.ipa.fraunhofer.de/primitives" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://www.ipa.fraunhofer.de/ros" as ros

CatkinPackage returns ros::CatkinPackage:
	{ros::CatkinPackage}
	name=RosNames':'
	BEGIN
		('fromGitRepo:' fromGitRepo=EString)?
		('artifacts:' 
			BEGIN 
			artifact+=Artifact*
			END
		)?
		('dependencies:' '[' dependency+=Dependency (',' dependency+=Dependency)* ']' )?
	END;


Artifact returns ros::Artifact:
	{ros::Artifact}
	
		name=RosNames':'
		BEGIN
		(node=Node)?
		END
	;

Node returns ros::Node:
	'node:' name=RosNames
	BEGIN
		('publishers:' 
			BEGIN 
			publisher+=Publisher*
			END
		)?
		('subscribers:' 
			BEGIN 
			subscriber+=Subscriber*
			END
		)?
		('parameters:'
			BEGIN
			parameter+=Parameter*
			END
		)?
	END;

Publisher returns ros::Publisher:
	{ros::Publisher}
		name=EString':'
		BEGIN
			'type:' message=[ros::TopicSpec|EString]
		END
	;

Subscriber returns ros::Subscriber:
	{ros::Subscriber}
		name=EString':'
		BEGIN
			'type:' message=[ros::TopicSpec|EString]
		END
;

Parameter returns ros::Parameter:
	{ros::Parameter}
		name=EString':'
		BEGIN
		//'type' type=ParameterType
		END
	'}';


// YAML format
terminal BEGIN: 'synthetic:BEGIN';
terminal END: 'synthetic:END';

@Override 
terminal SL_COMMENT: '#' !('\n'|'\r')*;
//


Dependency returns ros::Dependency:
	PackageDependency | ExternalDependency;

PackageDependency returns ros::PackageDependency:
	package=[ros::Package|EString]
;

ExternalDependency returns ros::ExternalDependency:
	{ros::ExternalDependency}
	'ExternalDependency'
	name=EString;

RosNames returns ecore::EString:
	ROS_CONVENTION_A | ID | 'node'
;

EString returns ecore::EString:
	STRING | ID;

RosParamNames returns ecore::EString:
	ROS_CONVENTION_PARAM | ID 
;

terminal ROS_CONVENTION_A:
	( ('/' ID ) | ( ID '/' ) )* ;

terminal ROS_CONVENTION_PARAM:
	( ('/' STRING ) | ( STRING '/' ) | ('~' STRING ) )* ;