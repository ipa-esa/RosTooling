/*
 * generated by Xtext 2.25.0
 */
package de.fraunhofer.ipa.rossystem.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Action;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class RosSystemGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class RosSystemElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.RosSystem");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRosSystemAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameEStringParserRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final RuleCall cBEGINTerminalRuleCall_3 = (RuleCall)cGroup.eContents().get(3);
		private final Assignment cRosnodeAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cRosnodeRosNodeParserRuleCall_4_0 = (RuleCall)cRosnodeAssignment_4.eContents().get(0);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//RosSystem returns RosSystem:
		//    {RosSystem}
		//    Name=EString':'
		//    BEGIN
		//        rosnode+=RosNode
		//        //('Parameters' '{' (Parameter+=Parameter ( "," Parameter+=Parameter)*)? '}' )?
		//    END;
		@Override public ParserRule getRule() { return rule; }
		
		//{RosSystem}
		//Name=EString':'
		//BEGIN
		//    rosnode+=RosNode
		//    //('Parameters' '{' (Parameter+=Parameter ( "," Parameter+=Parameter)*)? '}' )?
		//END
		public Group getGroup() { return cGroup; }
		
		//{RosSystem}
		public Action getRosSystemAction_0() { return cRosSystemAction_0; }
		
		//Name=EString
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_1_0() { return cNameEStringParserRuleCall_1_0; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_3() { return cBEGINTerminalRuleCall_3; }
		
		//rosnode+=RosNode
		public Assignment getRosnodeAssignment_4() { return cRosnodeAssignment_4; }
		
		//RosNode
		public RuleCall getRosnodeRosNodeParserRuleCall_4_0() { return cRosnodeRosNodeParserRuleCall_4_0; }
		
		//    //('Parameters' '{' (Parameter+=Parameter ( "," Parameter+=Parameter)*)? '}' )?
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class RosNodeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.RosNode");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cColonKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final RuleCall cBEGINTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Keyword cFromKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cFromAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final CrossReference cFromNodeCrossReference_4_0 = (CrossReference)cFromAssignment_4.eContents().get(0);
		private final RuleCall cFromNodeEStringParserRuleCall_4_0_1 = (RuleCall)cFromNodeCrossReference_4_0.eContents().get(1);
		private final RuleCall cENDTerminalRuleCall_5 = (RuleCall)cGroup.eContents().get(5);
		
		//RosNode returns RosNode:
		//    Name=EString':'
		//    BEGIN
		//    'from:'From=[ros::Node|EString]
		//    END
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//Name=EString':'
		//BEGIN
		//'from:'From=[ros::Node|EString]
		//END
		public Group getGroup() { return cGroup; }
		
		//Name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//':'
		public Keyword getColonKeyword_1() { return cColonKeyword_1; }
		
		//BEGIN
		public RuleCall getBEGINTerminalRuleCall_2() { return cBEGINTerminalRuleCall_2; }
		
		//'from:'
		public Keyword getFromKeyword_3() { return cFromKeyword_3; }
		
		//From=[ros::Node|EString]
		public Assignment getFromAssignment_4() { return cFromAssignment_4; }
		
		//[ros::Node|EString]
		public CrossReference getFromNodeCrossReference_4_0() { return cFromNodeCrossReference_4_0; }
		
		//EString
		public RuleCall getFromNodeEStringParserRuleCall_4_0_1() { return cFromNodeEStringParserRuleCall_4_0_1; }
		
		//END
		public RuleCall getENDTerminalRuleCall_5() { return cENDTerminalRuleCall_5; }
	}
	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSTRINGTerminalRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cIDTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		////TopicConnection returns TopicConnection:
		////    'TopicConnection'
		////    TopicName=EString
		////    '{'
		////        'From' '(' From+=[componentInterface::RosPublisher|EString] (',' From+=[componentInterface::RosPublisher|EString])* ')'
		////        'To' '(' To+=[componentInterface::RosSubscriber|EString] ( ',' To+=[componentInterface::RosSubscriber|EString])* ')'
		////    '}';
		////
		////ServiceConnection returns ServiceConnection:
		////    'ServiceConnection'
		////    ServiceName=EString
		////    '{'
		////        'From' '(' From+=[componentInterface::RosServiceServer|EString] (',' From+=[componentInterface::RosServiceServer|EString])* ')'
		////        'To' To=[componentInterface::RosServiceClient|EString]
		////    '}';
		////
		////ActionConnection returns ActionConnection:
		////    'ActionConnection'
		////    ActionName=EString
		////    '{'
		////        'From' From=[componentInterface::RosActionServer|EString]
		////        'To'  To=[componentInterface::RosActionClient|EString]
		////    '}';
		//EString returns ecore::EString:
		//    STRING | ID;
		@Override public ParserRule getRule() { return rule; }
		
		//STRING | ID
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//STRING
		public RuleCall getSTRINGTerminalRuleCall_0() { return cSTRINGTerminalRuleCall_0; }
		
		//ID
		public RuleCall getIDTerminalRuleCall_1() { return cIDTerminalRuleCall_1; }
	}
	public class ParameterElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.Parameter");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cNameKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cNameAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cNameEStringParserRuleCall_3_0 = (RuleCall)cNameAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cNameSpaceKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cNamespaceAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cNamespaceNamespaceParserRuleCall_4_1_0 = (RuleCall)cNamespaceAssignment_4_1.eContents().get(0);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cTypeKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Assignment cTypeAssignment_5_1 = (Assignment)cGroup_5.eContents().get(1);
		private final RuleCall cTypeParameterTypeParserRuleCall_5_1_0 = (RuleCall)cTypeAssignment_5_1.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cValueKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cValueAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cValueParameterValueParserRuleCall_6_1_0 = (RuleCall)cValueAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		
		////PARAMETERS
		//Parameter returns ros::Parameter:
		//    'Parameter'
		//    '{'
		//        'name' name=EString
		//        ('NameSpace' namespace=Namespace)?
		//        ('type' type=ParameterType)?
		//        ('value' value=ParameterValue)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Parameter'
		//'{'
		//    'name' name=EString
		//    ('NameSpace' namespace=Namespace)?
		//    ('type' type=ParameterType)?
		//    ('value' value=ParameterValue)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Parameter'
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'name'
		public Keyword getNameKeyword_2() { return cNameKeyword_2; }
		
		//name=EString
		public Assignment getNameAssignment_3() { return cNameAssignment_3; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_3_0() { return cNameEStringParserRuleCall_3_0; }
		
		//('NameSpace' namespace=Namespace)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'NameSpace'
		public Keyword getNameSpaceKeyword_4_0() { return cNameSpaceKeyword_4_0; }
		
		//namespace=Namespace
		public Assignment getNamespaceAssignment_4_1() { return cNamespaceAssignment_4_1; }
		
		//Namespace
		public RuleCall getNamespaceNamespaceParserRuleCall_4_1_0() { return cNamespaceNamespaceParserRuleCall_4_1_0; }
		
		//('type' type=ParameterType)?
		public Group getGroup_5() { return cGroup_5; }
		
		//'type'
		public Keyword getTypeKeyword_5_0() { return cTypeKeyword_5_0; }
		
		//type=ParameterType
		public Assignment getTypeAssignment_5_1() { return cTypeAssignment_5_1; }
		
		//ParameterType
		public RuleCall getTypeParameterTypeParserRuleCall_5_1_0() { return cTypeParameterTypeParserRuleCall_5_1_0; }
		
		//('value' value=ParameterValue)?
		public Group getGroup_6() { return cGroup_6; }
		
		//'value'
		public Keyword getValueKeyword_6_0() { return cValueKeyword_6_0; }
		
		//value=ParameterValue
		public Assignment getValueAssignment_6_1() { return cValueAssignment_6_1; }
		
		//ParameterValue
		public RuleCall getValueParameterValueParserRuleCall_6_1_0() { return cValueParameterValueParserRuleCall_6_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }
	}
	public class ParameterTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterListTypeParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParameterStructTypeParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cParameterIntegerTypeParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cParameterStringTypeParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cParameterDoubleTypeParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cParameterBooleanTypeParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cParameterBase64TypeParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		private final RuleCall cParameterArrayTypeParserRuleCall_7 = (RuleCall)cAlternatives.eContents().get(7);
		
		//ParameterType returns ros::ParameterType:
		//    ParameterListType | ParameterStructType | ParameterIntegerType | ParameterStringType | ParameterDoubleType | ParameterBooleanType | ParameterBase64Type | ParameterArrayType;
		@Override public ParserRule getRule() { return rule; }
		
		//ParameterListType | ParameterStructType | ParameterIntegerType | ParameterStringType | ParameterDoubleType | ParameterBooleanType | ParameterBase64Type | ParameterArrayType
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ParameterListType
		public RuleCall getParameterListTypeParserRuleCall_0() { return cParameterListTypeParserRuleCall_0; }
		
		//ParameterStructType
		public RuleCall getParameterStructTypeParserRuleCall_1() { return cParameterStructTypeParserRuleCall_1; }
		
		//ParameterIntegerType
		public RuleCall getParameterIntegerTypeParserRuleCall_2() { return cParameterIntegerTypeParserRuleCall_2; }
		
		//ParameterStringType
		public RuleCall getParameterStringTypeParserRuleCall_3() { return cParameterStringTypeParserRuleCall_3; }
		
		//ParameterDoubleType
		public RuleCall getParameterDoubleTypeParserRuleCall_4() { return cParameterDoubleTypeParserRuleCall_4; }
		
		//ParameterBooleanType
		public RuleCall getParameterBooleanTypeParserRuleCall_5() { return cParameterBooleanTypeParserRuleCall_5; }
		
		//ParameterBase64Type
		public RuleCall getParameterBase64TypeParserRuleCall_6() { return cParameterBase64TypeParserRuleCall_6; }
		
		//ParameterArrayType
		public RuleCall getParameterArrayTypeParserRuleCall_7() { return cParameterArrayTypeParserRuleCall_7; }
	}
	public class ParameterValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cParameterStringParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cParameterBase64ParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cParameterIntegerParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cParameterDoubleParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cParameterBooleanParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cParameterListParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		private final RuleCall cParameterStructParserRuleCall_6 = (RuleCall)cAlternatives.eContents().get(6);
		
		// // | ParameterDateType;
		//ParameterValue returns ros::ParameterValue:
		//    ParameterString | ParameterBase64 | ParameterInteger | ParameterDouble | ParameterBoolean | ParameterList | ParameterStruct;
		@Override public ParserRule getRule() { return rule; }
		
		//ParameterString | ParameterBase64 | ParameterInteger | ParameterDouble | ParameterBoolean | ParameterList | ParameterStruct
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//ParameterString
		public RuleCall getParameterStringParserRuleCall_0() { return cParameterStringParserRuleCall_0; }
		
		//ParameterBase64
		public RuleCall getParameterBase64ParserRuleCall_1() { return cParameterBase64ParserRuleCall_1; }
		
		//ParameterInteger
		public RuleCall getParameterIntegerParserRuleCall_2() { return cParameterIntegerParserRuleCall_2; }
		
		//ParameterDouble
		public RuleCall getParameterDoubleParserRuleCall_3() { return cParameterDoubleParserRuleCall_3; }
		
		//ParameterBoolean
		public RuleCall getParameterBooleanParserRuleCall_4() { return cParameterBooleanParserRuleCall_4; }
		
		//ParameterList
		public RuleCall getParameterListParserRuleCall_5() { return cParameterListParserRuleCall_5; }
		
		//ParameterStruct
		public RuleCall getParameterStructParserRuleCall_6() { return cParameterStructParserRuleCall_6; }
	}
	public class ParameterListTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterListType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterListTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cListKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cSequenceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cSequenceParameterTypeParserRuleCall_3_0 = (RuleCall)cSequenceAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cSequenceAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cSequenceParameterTypeParserRuleCall_4_1_0 = (RuleCall)cSequenceAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		// // | ParameterDate;
		//ParameterListType returns ros::ParameterListType:
		//    {ros::ParameterListType}
		//    'List'
		//    '{'
		//        sequence+=ParameterType ( ',' sequence+=ParameterType )*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterListType}
		//'List'
		//'{'
		//    sequence+=ParameterType ( ',' sequence+=ParameterType )*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterListType}
		public Action getParameterListTypeAction_0() { return cParameterListTypeAction_0; }
		
		//'List'
		public Keyword getListKeyword_1() { return cListKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//sequence+=ParameterType
		public Assignment getSequenceAssignment_3() { return cSequenceAssignment_3; }
		
		//ParameterType
		public RuleCall getSequenceParameterTypeParserRuleCall_3_0() { return cSequenceParameterTypeParserRuleCall_3_0; }
		
		//( ',' sequence+=ParameterType )*
		public Group getGroup_4() { return cGroup_4; }
		
		//','
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//sequence+=ParameterType
		public Assignment getSequenceAssignment_4_1() { return cSequenceAssignment_4_1; }
		
		//ParameterType
		public RuleCall getSequenceParameterTypeParserRuleCall_4_1_0() { return cSequenceParameterTypeParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ParameterStructTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterStructType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterStructTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStructKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cParameterstructypetmemberAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cParameterstructypetmemberParameterStructTypeMemberParserRuleCall_3_0 = (RuleCall)cParameterstructypetmemberAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cCommaKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cParameterstructypetmemberAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cParameterstructypetmemberParameterStructTypeMemberParserRuleCall_4_1_0 = (RuleCall)cParameterstructypetmemberAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ParameterStructType returns ros::ParameterStructType:
		//    {ros::ParameterStructType}
		//    'Struct'
		//    '{'
		//        parameterstructypetmember+=ParameterStructTypeMember ( "," parameterstructypetmember+=ParameterStructTypeMember)*
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterStructType}
		//'Struct'
		//'{'
		//    parameterstructypetmember+=ParameterStructTypeMember ( "," parameterstructypetmember+=ParameterStructTypeMember)*
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterStructType}
		public Action getParameterStructTypeAction_0() { return cParameterStructTypeAction_0; }
		
		//'Struct'
		public Keyword getStructKeyword_1() { return cStructKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//parameterstructypetmember+=ParameterStructTypeMember
		public Assignment getParameterstructypetmemberAssignment_3() { return cParameterstructypetmemberAssignment_3; }
		
		//ParameterStructTypeMember
		public RuleCall getParameterstructypetmemberParameterStructTypeMemberParserRuleCall_3_0() { return cParameterstructypetmemberParameterStructTypeMemberParserRuleCall_3_0; }
		
		//( "," parameterstructypetmember+=ParameterStructTypeMember)*
		public Group getGroup_4() { return cGroup_4; }
		
		//","
		public Keyword getCommaKeyword_4_0() { return cCommaKeyword_4_0; }
		
		//parameterstructypetmember+=ParameterStructTypeMember
		public Assignment getParameterstructypetmemberAssignment_4_1() { return cParameterstructypetmemberAssignment_4_1; }
		
		//ParameterStructTypeMember
		public RuleCall getParameterstructypetmemberParameterStructTypeMemberParserRuleCall_4_1_0() { return cParameterstructypetmemberParameterStructTypeMemberParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ParameterIntegerTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterIntegerType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterIntegerTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cIntegerKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterIntegerParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterIntegerType returns ros::ParameterIntegerType:
		//    {ros::ParameterIntegerType}
		//    'Integer'
		//    ('default' default=ParameterInteger)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterIntegerType}
		//'Integer'
		//('default' default=ParameterInteger)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterIntegerType}
		public Action getParameterIntegerTypeAction_0() { return cParameterIntegerTypeAction_0; }
		
		//'Integer'
		public Keyword getIntegerKeyword_1() { return cIntegerKeyword_1; }
		
		//('default' default=ParameterInteger)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterInteger
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterInteger
		public RuleCall getDefaultParameterIntegerParserRuleCall_2_1_0() { return cDefaultParameterIntegerParserRuleCall_2_1_0; }
	}
	public class ParameterStringTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterStringType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterStringTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cStringKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterStringParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterStringType returns ros::ParameterStringType:
		//    {ros::ParameterStringType}
		//    'String'
		//    ('default' default=ParameterString)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterStringType}
		//'String'
		//('default' default=ParameterString)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterStringType}
		public Action getParameterStringTypeAction_0() { return cParameterStringTypeAction_0; }
		
		//'String'
		public Keyword getStringKeyword_1() { return cStringKeyword_1; }
		
		//('default' default=ParameterString)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterString
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterString
		public RuleCall getDefaultParameterStringParserRuleCall_2_1_0() { return cDefaultParameterStringParserRuleCall_2_1_0; }
	}
	public class ParameterDoubleTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterDoubleType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterDoubleTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDoubleKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterDoubleParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterDoubleType returns ros::ParameterDoubleType:
		//    {ros::ParameterDoubleType}
		//    'Double'
		//    ('default' default=ParameterDouble)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterDoubleType}
		//'Double'
		//('default' default=ParameterDouble)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterDoubleType}
		public Action getParameterDoubleTypeAction_0() { return cParameterDoubleTypeAction_0; }
		
		//'Double'
		public Keyword getDoubleKeyword_1() { return cDoubleKeyword_1; }
		
		//('default' default=ParameterDouble)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterDouble
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterDouble
		public RuleCall getDefaultParameterDoubleParserRuleCall_2_1_0() { return cDefaultParameterDoubleParserRuleCall_2_1_0; }
	}
	public class ParameterDateTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterDateType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterDateTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cDateKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterDateParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterDateType returns ros::ParameterDateType:
		//    {ros::ParameterDateType}
		//    'Date'
		//    ('default' default=ParameterDate)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterDateType}
		//'Date'
		//('default' default=ParameterDate)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterDateType}
		public Action getParameterDateTypeAction_0() { return cParameterDateTypeAction_0; }
		
		//'Date'
		public Keyword getDateKeyword_1() { return cDateKeyword_1; }
		
		//('default' default=ParameterDate)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterDate
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterDate
		public RuleCall getDefaultParameterDateParserRuleCall_2_1_0() { return cDefaultParameterDateParserRuleCall_2_1_0; }
	}
	public class ParameterBooleanTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterBooleanType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterBooleanTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBooleanKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterBooleanParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterBooleanType returns ros::ParameterBooleanType:
		//    {ros::ParameterBooleanType}
		//    'Boolean'
		//    ('default' default=ParameterBoolean)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterBooleanType}
		//'Boolean'
		//('default' default=ParameterBoolean)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterBooleanType}
		public Action getParameterBooleanTypeAction_0() { return cParameterBooleanTypeAction_0; }
		
		//'Boolean'
		public Keyword getBooleanKeyword_1() { return cBooleanKeyword_1; }
		
		//('default' default=ParameterBoolean)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterBoolean
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterBoolean
		public RuleCall getDefaultParameterBooleanParserRuleCall_2_1_0() { return cDefaultParameterBooleanParserRuleCall_2_1_0; }
	}
	public class ParameterBase64TypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterBase64Type");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterBase64TypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cBase64Keyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterBase64ParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterBase64Type returns ros::ParameterBase64Type:
		//    {ros::ParameterBase64Type}
		//    'Base64'
		//    ('default' default=ParameterBase64)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterBase64Type}
		//'Base64'
		//('default' default=ParameterBase64)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterBase64Type}
		public Action getParameterBase64TypeAction_0() { return cParameterBase64TypeAction_0; }
		
		//'Base64'
		public Keyword getBase64Keyword_1() { return cBase64Keyword_1; }
		
		//('default' default=ParameterBase64)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterBase64
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterBase64
		public RuleCall getDefaultParameterBase64ParserRuleCall_2_1_0() { return cDefaultParameterBase64ParserRuleCall_2_1_0; }
	}
	public class ParameterAnyTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterAnyType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAnyTypeAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cAnyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cDefaultKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cDefaultAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final RuleCall cDefaultParameterAnyParserRuleCall_2_1_0 = (RuleCall)cDefaultAssignment_2_1.eContents().get(0);
		
		//ParameterAnyType returns ros::ParameterAnyType:
		//    {ros::ParameterAnyType}
		//    'Any'
		//    ('default' default=ParameterAny)?;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterAnyType}
		//'Any'
		//('default' default=ParameterAny)?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterAnyType}
		public Action getParameterAnyTypeAction_0() { return cParameterAnyTypeAction_0; }
		
		//'Any'
		public Keyword getAnyKeyword_1() { return cAnyKeyword_1; }
		
		//('default' default=ParameterAny)?
		public Group getGroup_2() { return cGroup_2; }
		
		//'default'
		public Keyword getDefaultKeyword_2_0() { return cDefaultKeyword_2_0; }
		
		//default=ParameterAny
		public Assignment getDefaultAssignment_2_1() { return cDefaultAssignment_2_1; }
		
		//ParameterAny
		public RuleCall getDefaultParameterAnyParserRuleCall_2_1_0() { return cDefaultParameterAnyParserRuleCall_2_1_0; }
	}
	public class ParameterArrayTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterArrayType");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cArrayKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cTypeKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeParameterTypeParserRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		private final Group cGroup_4 = (Group)cGroup.eContents().get(4);
		private final Keyword cDefaultKeyword_4_0 = (Keyword)cGroup_4.eContents().get(0);
		private final Assignment cDefaultAssignment_4_1 = (Assignment)cGroup_4.eContents().get(1);
		private final RuleCall cDefaultParameterListParserRuleCall_4_1_0 = (RuleCall)cDefaultAssignment_4_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		
		//ParameterArrayType returns ros::ParameterArrayType:
		//    'Array'
		//    '{'
		//        'type' type=ParameterType
		//        ('default' default=ParameterList)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//'Array'
		//'{'
		//    'type' type=ParameterType
		//    ('default' default=ParameterList)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//'Array'
		public Keyword getArrayKeyword_0() { return cArrayKeyword_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'type'
		public Keyword getTypeKeyword_2() { return cTypeKeyword_2; }
		
		//type=ParameterType
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//ParameterType
		public RuleCall getTypeParameterTypeParserRuleCall_3_0() { return cTypeParameterTypeParserRuleCall_3_0; }
		
		//('default' default=ParameterList)?
		public Group getGroup_4() { return cGroup_4; }
		
		//'default'
		public Keyword getDefaultKeyword_4_0() { return cDefaultKeyword_4_0; }
		
		//default=ParameterList
		public Assignment getDefaultAssignment_4_1() { return cDefaultAssignment_4_1; }
		
		//ParameterList
		public RuleCall getDefaultParameterListParserRuleCall_4_1_0() { return cDefaultParameterListParserRuleCall_4_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }
	}
	public class ParameterListElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterList");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterSequenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cValueAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cValueParameterValueParserRuleCall_2_0 = (RuleCall)cValueAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueParameterValueParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ParameterList returns ros::ParameterSequence:
		//    {ros::ParameterSequence}
		//        '{'    value+=ParameterValue ( ',' value+=ParameterValue )* '}'
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterSequence}
		//    '{'    value+=ParameterValue ( ',' value+=ParameterValue )* '}'
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterSequence}
		public Action getParameterSequenceAction_0() { return cParameterSequenceAction_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//value+=ParameterValue
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }
		
		//ParameterValue
		public RuleCall getValueParameterValueParserRuleCall_2_0() { return cValueParameterValueParserRuleCall_2_0; }
		
		//( ',' value+=ParameterValue )*
		public Group getGroup_3() { return cGroup_3; }
		
		//','
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }
		
		//value+=ParameterValue
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//ParameterValue
		public RuleCall getValueParameterValueParserRuleCall_3_1_0() { return cValueParameterValueParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ParameterAnyElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterAny");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterAnyAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cParameterAnyKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cValueKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cValueAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_3_1_0 = (RuleCall)cValueAssignment_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ParameterAny returns ros::ParameterAny:
		//    {ros::ParameterAny}
		//    'ParameterAny'
		//    '{'
		//        ('value' value=EString)?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterAny}
		//'ParameterAny'
		//'{'
		//    ('value' value=EString)?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterAny}
		public Action getParameterAnyAction_0() { return cParameterAnyAction_0; }
		
		//'ParameterAny'
		public Keyword getParameterAnyKeyword_1() { return cParameterAnyKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('value' value=EString)?
		public Group getGroup_3() { return cGroup_3; }
		
		//'value'
		public Keyword getValueKeyword_3_0() { return cValueKeyword_3_0; }
		
		//value=EString
		public Assignment getValueAssignment_3_1() { return cValueAssignment_3_1; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_3_1_0() { return cValueEStringParserRuleCall_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ParameterStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterString");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueEStringParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ParameterString returns ros::ParameterString:
		//    value=EString
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=EString
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//EString
		public RuleCall getValueEStringParserRuleCall_0() { return cValueEStringParserRuleCall_0; }
	}
	public class ParameterBase64Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterBase64");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBase64BinaryParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ParameterBase64 returns ros::ParameterBase64:
		//    value=Base64Binary
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Base64Binary
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Base64Binary
		public RuleCall getValueBase64BinaryParserRuleCall_0() { return cValueBase64BinaryParserRuleCall_0; }
	}
	public class ParameterIntegerElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterInteger");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueInteger0ParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ParameterInteger returns ros::ParameterInteger:
		//    value=Integer0
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Integer0
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Integer0
		public RuleCall getValueInteger0ParserRuleCall_0() { return cValueInteger0ParserRuleCall_0; }
	}
	public class ParameterDoubleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterDouble");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueDouble0ParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ParameterDouble returns ros::ParameterDouble:
		//    value=Double0
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=Double0
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//Double0
		public RuleCall getValueDouble0ParserRuleCall_0() { return cValueDouble0ParserRuleCall_0; }
	}
	public class ParameterBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterBoolean");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueBoolean0ParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ParameterBoolean returns ros::ParameterBoolean:
		//    value=boolean0
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//value=boolean0
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//boolean0
		public RuleCall getValueBoolean0ParserRuleCall_0() { return cValueBoolean0ParserRuleCall_0; }
	}
	public class ParameterDateElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterDate");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueDateTime0ParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//ParameterDate returns ros::ParameterDate:
		//    value=DateTime0
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//value=DateTime0
		public Assignment getValueAssignment() { return cValueAssignment; }
		
		//DateTime0
		public RuleCall getValueDateTime0ParserRuleCall_0() { return cValueDateTime0ParserRuleCall_0; }
	}
	public class ParameterStructElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterStruct");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cParameterStructAction_0 = (Action)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_1_0 = (Keyword)cGroup_1.eContents().get(0);
		private final Assignment cValueAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cValueParameterStructMemberParserRuleCall_1_1_0 = (RuleCall)cValueAssignment_1_1.eContents().get(0);
		private final Group cGroup_1_2 = (Group)cGroup_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_2_0 = (Keyword)cGroup_1_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1_2_1 = (Keyword)cGroup_1_2.eContents().get(1);
		private final Assignment cValueAssignment_1_2_2 = (Assignment)cGroup_1_2.eContents().get(2);
		private final RuleCall cValueParameterStructMemberParserRuleCall_1_2_2_0 = (RuleCall)cValueAssignment_1_2_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_1_2_3 = (Keyword)cGroup_1_2.eContents().get(3);
		private final Keyword cRightCurlyBracketKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		
		//ParameterStruct returns ros::ParameterStruct:
		//    {ros::ParameterStruct}
		//        ('{' value+=ParameterStructMember  ( "," '{' value+=ParameterStructMember '}')*  '}' )?
		//;
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::ParameterStruct}
		//    ('{' value+=ParameterStructMember  ( "," '{' value+=ParameterStructMember '}')*  '}' )?
		public Group getGroup() { return cGroup; }
		
		//{ros::ParameterStruct}
		public Action getParameterStructAction_0() { return cParameterStructAction_0; }
		
		//('{' value+=ParameterStructMember  ( "," '{' value+=ParameterStructMember '}')*  '}' )?
		public Group getGroup_1() { return cGroup_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_0() { return cLeftCurlyBracketKeyword_1_0; }
		
		//value+=ParameterStructMember
		public Assignment getValueAssignment_1_1() { return cValueAssignment_1_1; }
		
		//ParameterStructMember
		public RuleCall getValueParameterStructMemberParserRuleCall_1_1_0() { return cValueParameterStructMemberParserRuleCall_1_1_0; }
		
		//( "," '{' value+=ParameterStructMember '}')*
		public Group getGroup_1_2() { return cGroup_1_2; }
		
		//","
		public Keyword getCommaKeyword_1_2_0() { return cCommaKeyword_1_2_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1_2_1() { return cLeftCurlyBracketKeyword_1_2_1; }
		
		//value+=ParameterStructMember
		public Assignment getValueAssignment_1_2_2() { return cValueAssignment_1_2_2; }
		
		//ParameterStructMember
		public RuleCall getValueParameterStructMemberParserRuleCall_1_2_2_0() { return cValueParameterStructMemberParserRuleCall_1_2_2_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_2_3() { return cRightCurlyBracketKeyword_1_2_3; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_1_3() { return cRightCurlyBracketKeyword_1_3; }
	}
	public class ParameterStructMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterStructMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cValueKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueParameterValueParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//ParameterStructMember returns ros::ParameterStructMember:
		//    name=EString
		//    '{'
		//        'value' value=ParameterValue
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//'{'
		//    'value' value=ParameterValue
		//'}'
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }
		
		//'value'
		public Keyword getValueKeyword_2() { return cValueKeyword_2; }
		
		//value=ParameterValue
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }
		
		//ParameterValue
		public RuleCall getValueParameterValueParserRuleCall_3_0() { return cValueParameterValueParserRuleCall_3_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class ParameterStructTypeMemberElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.ParameterStructTypeMember");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameEStringParserRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeParameterTypeParserRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		
		//ParameterStructTypeMember returns ros::ParameterStructTypeMember:
		//        name=EString
		//        type=ParameterType
		//    ;
		@Override public ParserRule getRule() { return rule; }
		
		//name=EString
		//type=ParameterType
		public Group getGroup() { return cGroup; }
		
		//name=EString
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//EString
		public RuleCall getNameEStringParserRuleCall_0_0() { return cNameEStringParserRuleCall_0_0; }
		
		//type=ParameterType
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }
		
		//ParameterType
		public RuleCall getTypeParameterTypeParserRuleCall_1_0() { return cTypeParameterTypeParserRuleCall_1_0; }
	}
	public class Base64BinaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.Base64Binary");
		private final RuleCall cBINARYTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Base64Binary returns type::Base64Binary:
		//    BINARY ;
		@Override public ParserRule getRule() { return rule; }
		
		//BINARY
		public RuleCall getBINARYTerminalRuleCall() { return cBINARYTerminalRuleCall; }
	}
	public class Boolean0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.boolean0");
		private final RuleCall cBOOLEANTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//boolean0 returns type::Boolean:
		//    BOOLEAN;
		@Override public ParserRule getRule() { return rule; }
		
		//BOOLEAN
		public RuleCall getBOOLEANTerminalRuleCall() { return cBOOLEANTerminalRuleCall; }
	}
	public class Double0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.Double0");
		private final RuleCall cDOUBLETerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Double0 returns type::Double:
		//    DOUBLE;
		@Override public ParserRule getRule() { return rule; }
		
		//DOUBLE
		public RuleCall getDOUBLETerminalRuleCall() { return cDOUBLETerminalRuleCall; }
	}
	public class Integer0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.Integer0");
		private final RuleCall cDECINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//Integer0 returns type::Int:
		//    DECINT;
		@Override public ParserRule getRule() { return rule; }
		
		//DECINT
		public RuleCall getDECINTTerminalRuleCall() { return cDECINTTerminalRuleCall; }
	}
	public class DateTime0Elements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.DateTime0");
		private final RuleCall cDATE_TIMETerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//DateTime0 returns type::DateTime:
		//    DATE_TIME;
		@Override public ParserRule getRule() { return rule; }
		
		//DATE_TIME
		public RuleCall getDATE_TIMETerminalRuleCall() { return cDATE_TIMETerminalRuleCall; }
	}
	public class NamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.Namespace");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cGlobalNamespaceParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cRelativeNamespace_ImplParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cPrivateNamespaceParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		////NAMESPACES
		//Namespace returns ros::Namespace:
		//    GlobalNamespace | RelativeNamespace_Impl | PrivateNamespace;
		@Override public ParserRule getRule() { return rule; }
		
		//GlobalNamespace | RelativeNamespace_Impl | PrivateNamespace
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//GlobalNamespace
		public RuleCall getGlobalNamespaceParserRuleCall_0() { return cGlobalNamespaceParserRuleCall_0; }
		
		//RelativeNamespace_Impl
		public RuleCall getRelativeNamespace_ImplParserRuleCall_1() { return cRelativeNamespace_ImplParserRuleCall_1; }
		
		//PrivateNamespace
		public RuleCall getPrivateNamespaceParserRuleCall_2() { return cPrivateNamespaceParserRuleCall_2; }
	}
	public class GlobalNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.GlobalNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cGlobalNamespaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cGlobalNamespaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPartsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPartsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPartsGraphNameParserRuleCall_3_2_0 = (RuleCall)cPartsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPartsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cPartsGraphNameParserRuleCall_3_3_1_0 = (RuleCall)cPartsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//GlobalNamespace returns ros::GlobalNamespace:
		//    {ros::GlobalNamespace}
		//    'GlobalNamespace'
		//    '{'
		//        ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::GlobalNamespace}
		//'GlobalNamespace'
		//'{'
		//    ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ros::GlobalNamespace}
		public Action getGlobalNamespaceAction_0() { return cGlobalNamespaceAction_0; }
		
		//'GlobalNamespace'
		public Keyword getGlobalNamespaceKeyword_1() { return cGlobalNamespaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'parts'
		public Keyword getPartsKeyword_3_0() { return cPartsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//parts+=GraphName
		public Assignment getPartsAssignment_3_2() { return cPartsAssignment_3_2; }
		
		//GraphName
		public RuleCall getPartsGraphNameParserRuleCall_3_2_0() { return cPartsGraphNameParserRuleCall_3_2_0; }
		
		//( "," parts+=GraphName)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//parts+=GraphName
		public Assignment getPartsAssignment_3_3_1() { return cPartsAssignment_3_3_1; }
		
		//GraphName
		public RuleCall getPartsGraphNameParserRuleCall_3_3_1_0() { return cPartsGraphNameParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class RelativeNamespace_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.RelativeNamespace_Impl");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cRelativeNamespaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cRelativeNamespaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPartsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPartsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPartsGraphNameParserRuleCall_3_2_0 = (RuleCall)cPartsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPartsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cPartsGraphNameParserRuleCall_3_3_1_0 = (RuleCall)cPartsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//RelativeNamespace_Impl returns ros::RelativeNamespace:
		//    {ros::RelativeNamespace}
		//    'RelativeNamespace'
		//    '{'
		//        ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::RelativeNamespace}
		//'RelativeNamespace'
		//'{'
		//    ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ros::RelativeNamespace}
		public Action getRelativeNamespaceAction_0() { return cRelativeNamespaceAction_0; }
		
		//'RelativeNamespace'
		public Keyword getRelativeNamespaceKeyword_1() { return cRelativeNamespaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'parts'
		public Keyword getPartsKeyword_3_0() { return cPartsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//parts+=GraphName
		public Assignment getPartsAssignment_3_2() { return cPartsAssignment_3_2; }
		
		//GraphName
		public RuleCall getPartsGraphNameParserRuleCall_3_2_0() { return cPartsGraphNameParserRuleCall_3_2_0; }
		
		//( "," parts+=GraphName)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//parts+=GraphName
		public Assignment getPartsAssignment_3_3_1() { return cPartsAssignment_3_3_1; }
		
		//GraphName
		public RuleCall getPartsGraphNameParserRuleCall_3_3_1_0() { return cPartsGraphNameParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class PrivateNamespaceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.PrivateNamespace");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cPrivateNamespaceAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cPrivateNamespaceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cPartsKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3_1 = (Keyword)cGroup_3.eContents().get(1);
		private final Assignment cPartsAssignment_3_2 = (Assignment)cGroup_3.eContents().get(2);
		private final RuleCall cPartsGraphNameParserRuleCall_3_2_0 = (RuleCall)cPartsAssignment_3_2.eContents().get(0);
		private final Group cGroup_3_3 = (Group)cGroup_3.eContents().get(3);
		private final Keyword cCommaKeyword_3_3_0 = (Keyword)cGroup_3_3.eContents().get(0);
		private final Assignment cPartsAssignment_3_3_1 = (Assignment)cGroup_3_3.eContents().get(1);
		private final RuleCall cPartsGraphNameParserRuleCall_3_3_1_0 = (RuleCall)cPartsAssignment_3_3_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3_4 = (Keyword)cGroup_3.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		
		//PrivateNamespace returns ros::PrivateNamespace:
		//    {ros::PrivateNamespace}
		//    'PrivateNamespace'
		//    '{'
		//        ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		//    '}';
		@Override public ParserRule getRule() { return rule; }
		
		//{ros::PrivateNamespace}
		//'PrivateNamespace'
		//'{'
		//    ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		//'}'
		public Group getGroup() { return cGroup; }
		
		//{ros::PrivateNamespace}
		public Action getPrivateNamespaceAction_0() { return cPrivateNamespaceAction_0; }
		
		//'PrivateNamespace'
		public Keyword getPrivateNamespaceKeyword_1() { return cPrivateNamespaceKeyword_1; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }
		
		//('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
		public Group getGroup_3() { return cGroup_3; }
		
		//'parts'
		public Keyword getPartsKeyword_3_0() { return cPartsKeyword_3_0; }
		
		//'{'
		public Keyword getLeftCurlyBracketKeyword_3_1() { return cLeftCurlyBracketKeyword_3_1; }
		
		//parts+=GraphName
		public Assignment getPartsAssignment_3_2() { return cPartsAssignment_3_2; }
		
		//GraphName
		public RuleCall getPartsGraphNameParserRuleCall_3_2_0() { return cPartsGraphNameParserRuleCall_3_2_0; }
		
		//( "," parts+=GraphName)*
		public Group getGroup_3_3() { return cGroup_3_3; }
		
		//","
		public Keyword getCommaKeyword_3_3_0() { return cCommaKeyword_3_3_0; }
		
		//parts+=GraphName
		public Assignment getPartsAssignment_3_3_1() { return cPartsAssignment_3_3_1; }
		
		//GraphName
		public RuleCall getPartsGraphNameParserRuleCall_3_3_1_0() { return cPartsGraphNameParserRuleCall_3_3_1_0; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_3_4() { return cRightCurlyBracketKeyword_3_4; }
		
		//'}'
		public Keyword getRightCurlyBracketKeyword_4() { return cRightCurlyBracketKeyword_4; }
	}
	public class GraphNameElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.GraphName");
		private final Keyword cGraphNameKeyword = (Keyword)rule.eContents().get(1);
		
		//GraphName returns ros::GraphName:
		//    'GraphName' ;
		@Override public ParserRule getRule() { return rule; }
		
		//'GraphName'
		public Keyword getGraphNameKeyword() { return cGraphNameKeyword; }
	}
	
	
	private final RosSystemElements pRosSystem;
	private final TerminalRule tBEGIN;
	private final TerminalRule tEND;
	private final TerminalRule tSL_COMMENT;
	private final RosNodeElements pRosNode;
	private final EStringElements pEString;
	private final ParameterElements pParameter;
	private final ParameterTypeElements pParameterType;
	private final ParameterValueElements pParameterValue;
	private final ParameterListTypeElements pParameterListType;
	private final ParameterStructTypeElements pParameterStructType;
	private final ParameterIntegerTypeElements pParameterIntegerType;
	private final ParameterStringTypeElements pParameterStringType;
	private final ParameterDoubleTypeElements pParameterDoubleType;
	private final ParameterDateTypeElements pParameterDateType;
	private final ParameterBooleanTypeElements pParameterBooleanType;
	private final ParameterBase64TypeElements pParameterBase64Type;
	private final ParameterAnyTypeElements pParameterAnyType;
	private final ParameterArrayTypeElements pParameterArrayType;
	private final ParameterListElements pParameterList;
	private final ParameterAnyElements pParameterAny;
	private final ParameterStringElements pParameterString;
	private final ParameterBase64Elements pParameterBase64;
	private final ParameterIntegerElements pParameterInteger;
	private final ParameterDoubleElements pParameterDouble;
	private final ParameterBooleanElements pParameterBoolean;
	private final ParameterDateElements pParameterDate;
	private final ParameterStructElements pParameterStruct;
	private final ParameterStructMemberElements pParameterStructMember;
	private final ParameterStructTypeMemberElements pParameterStructTypeMember;
	private final TerminalRule tDIGIT;
	private final TerminalRule tBINARY;
	private final TerminalRule tBOOLEAN;
	private final TerminalRule tDOUBLE;
	private final TerminalRule tDECINT;
	private final TerminalRule tDAY;
	private final TerminalRule tMONTH;
	private final TerminalRule tYEAR;
	private final TerminalRule tHOUR;
	private final TerminalRule tMIN_SEC;
	private final TerminalRule tDATE_TIME;
	private final Base64BinaryElements pBase64Binary;
	private final Boolean0Elements pBoolean0;
	private final Double0Elements pDouble0;
	private final Integer0Elements pInteger0;
	private final DateTime0Elements pDateTime0;
	private final NamespaceElements pNamespace;
	private final GlobalNamespaceElements pGlobalNamespace;
	private final RelativeNamespace_ImplElements pRelativeNamespace_Impl;
	private final PrivateNamespaceElements pPrivateNamespace;
	private final GraphNameElements pGraphName;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public RosSystemGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pRosSystem = new RosSystemElements();
		this.tBEGIN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.BEGIN");
		this.tEND = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.END");
		this.tSL_COMMENT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.SL_COMMENT");
		this.pRosNode = new RosNodeElements();
		this.pEString = new EStringElements();
		this.pParameter = new ParameterElements();
		this.pParameterType = new ParameterTypeElements();
		this.pParameterValue = new ParameterValueElements();
		this.pParameterListType = new ParameterListTypeElements();
		this.pParameterStructType = new ParameterStructTypeElements();
		this.pParameterIntegerType = new ParameterIntegerTypeElements();
		this.pParameterStringType = new ParameterStringTypeElements();
		this.pParameterDoubleType = new ParameterDoubleTypeElements();
		this.pParameterDateType = new ParameterDateTypeElements();
		this.pParameterBooleanType = new ParameterBooleanTypeElements();
		this.pParameterBase64Type = new ParameterBase64TypeElements();
		this.pParameterAnyType = new ParameterAnyTypeElements();
		this.pParameterArrayType = new ParameterArrayTypeElements();
		this.pParameterList = new ParameterListElements();
		this.pParameterAny = new ParameterAnyElements();
		this.pParameterString = new ParameterStringElements();
		this.pParameterBase64 = new ParameterBase64Elements();
		this.pParameterInteger = new ParameterIntegerElements();
		this.pParameterDouble = new ParameterDoubleElements();
		this.pParameterBoolean = new ParameterBooleanElements();
		this.pParameterDate = new ParameterDateElements();
		this.pParameterStruct = new ParameterStructElements();
		this.pParameterStructMember = new ParameterStructMemberElements();
		this.pParameterStructTypeMember = new ParameterStructTypeMemberElements();
		this.tDIGIT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.DIGIT");
		this.tBINARY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.BINARY");
		this.tBOOLEAN = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.BOOLEAN");
		this.tDOUBLE = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.DOUBLE");
		this.tDECINT = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.DECINT");
		this.tDAY = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.DAY");
		this.tMONTH = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.MONTH");
		this.tYEAR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.YEAR");
		this.tHOUR = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.HOUR");
		this.tMIN_SEC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.MIN_SEC");
		this.tDATE_TIME = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "de.fraunhofer.ipa.rossystem.RosSystem.DATE_TIME");
		this.pBase64Binary = new Base64BinaryElements();
		this.pBoolean0 = new Boolean0Elements();
		this.pDouble0 = new Double0Elements();
		this.pInteger0 = new Integer0Elements();
		this.pDateTime0 = new DateTime0Elements();
		this.pNamespace = new NamespaceElements();
		this.pGlobalNamespace = new GlobalNamespaceElements();
		this.pRelativeNamespace_Impl = new RelativeNamespace_ImplElements();
		this.pPrivateNamespace = new PrivateNamespaceElements();
		this.pGraphName = new GraphNameElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("de.fraunhofer.ipa.rossystem.RosSystem".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//RosSystem returns RosSystem:
	//    {RosSystem}
	//    Name=EString':'
	//    BEGIN
	//        rosnode+=RosNode
	//        //('Parameters' '{' (Parameter+=Parameter ( "," Parameter+=Parameter)*)? '}' )?
	//    END;
	public RosSystemElements getRosSystemAccess() {
		return pRosSystem;
	}
	
	public ParserRule getRosSystemRule() {
		return getRosSystemAccess().getRule();
	}
	
	/////////////////////
	//// YAML format
	/////////////////////
	//terminal BEGIN: 'synthetic:BEGIN';
	public TerminalRule getBEGINRule() {
		return tBEGIN;
	}
	
	//terminal END: 'synthetic:END';
	public TerminalRule getENDRule() {
		return tEND;
	}
	
	//@Override
	//terminal SL_COMMENT: '#' !('\n'|'\r')*;
	public TerminalRule getSL_COMMENTRule() {
		return tSL_COMMENT;
	}
	
	//RosNode returns RosNode:
	//    Name=EString':'
	//    BEGIN
	//    'from:'From=[ros::Node|EString]
	//    END
	//;
	public RosNodeElements getRosNodeAccess() {
		return pRosNode;
	}
	
	public ParserRule getRosNodeRule() {
		return getRosNodeAccess().getRule();
	}
	
	////TopicConnection returns TopicConnection:
	////    'TopicConnection'
	////    TopicName=EString
	////    '{'
	////        'From' '(' From+=[componentInterface::RosPublisher|EString] (',' From+=[componentInterface::RosPublisher|EString])* ')'
	////        'To' '(' To+=[componentInterface::RosSubscriber|EString] ( ',' To+=[componentInterface::RosSubscriber|EString])* ')'
	////    '}';
	////
	////ServiceConnection returns ServiceConnection:
	////    'ServiceConnection'
	////    ServiceName=EString
	////    '{'
	////        'From' '(' From+=[componentInterface::RosServiceServer|EString] (',' From+=[componentInterface::RosServiceServer|EString])* ')'
	////        'To' To=[componentInterface::RosServiceClient|EString]
	////    '}';
	////
	////ActionConnection returns ActionConnection:
	////    'ActionConnection'
	////    ActionName=EString
	////    '{'
	////        'From' From=[componentInterface::RosActionServer|EString]
	////        'To'  To=[componentInterface::RosActionClient|EString]
	////    '}';
	//EString returns ecore::EString:
	//    STRING | ID;
	public EStringElements getEStringAccess() {
		return pEString;
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}
	
	////PARAMETERS
	//Parameter returns ros::Parameter:
	//    'Parameter'
	//    '{'
	//        'name' name=EString
	//        ('NameSpace' namespace=Namespace)?
	//        ('type' type=ParameterType)?
	//        ('value' value=ParameterValue)?
	//    '}';
	public ParameterElements getParameterAccess() {
		return pParameter;
	}
	
	public ParserRule getParameterRule() {
		return getParameterAccess().getRule();
	}
	
	//ParameterType returns ros::ParameterType:
	//    ParameterListType | ParameterStructType | ParameterIntegerType | ParameterStringType | ParameterDoubleType | ParameterBooleanType | ParameterBase64Type | ParameterArrayType;
	public ParameterTypeElements getParameterTypeAccess() {
		return pParameterType;
	}
	
	public ParserRule getParameterTypeRule() {
		return getParameterTypeAccess().getRule();
	}
	
	// // | ParameterDateType;
	//ParameterValue returns ros::ParameterValue:
	//    ParameterString | ParameterBase64 | ParameterInteger | ParameterDouble | ParameterBoolean | ParameterList | ParameterStruct;
	public ParameterValueElements getParameterValueAccess() {
		return pParameterValue;
	}
	
	public ParserRule getParameterValueRule() {
		return getParameterValueAccess().getRule();
	}
	
	// // | ParameterDate;
	//ParameterListType returns ros::ParameterListType:
	//    {ros::ParameterListType}
	//    'List'
	//    '{'
	//        sequence+=ParameterType ( ',' sequence+=ParameterType )*
	//    '}';
	public ParameterListTypeElements getParameterListTypeAccess() {
		return pParameterListType;
	}
	
	public ParserRule getParameterListTypeRule() {
		return getParameterListTypeAccess().getRule();
	}
	
	//ParameterStructType returns ros::ParameterStructType:
	//    {ros::ParameterStructType}
	//    'Struct'
	//    '{'
	//        parameterstructypetmember+=ParameterStructTypeMember ( "," parameterstructypetmember+=ParameterStructTypeMember)*
	//    '}';
	public ParameterStructTypeElements getParameterStructTypeAccess() {
		return pParameterStructType;
	}
	
	public ParserRule getParameterStructTypeRule() {
		return getParameterStructTypeAccess().getRule();
	}
	
	//ParameterIntegerType returns ros::ParameterIntegerType:
	//    {ros::ParameterIntegerType}
	//    'Integer'
	//    ('default' default=ParameterInteger)?;
	public ParameterIntegerTypeElements getParameterIntegerTypeAccess() {
		return pParameterIntegerType;
	}
	
	public ParserRule getParameterIntegerTypeRule() {
		return getParameterIntegerTypeAccess().getRule();
	}
	
	//ParameterStringType returns ros::ParameterStringType:
	//    {ros::ParameterStringType}
	//    'String'
	//    ('default' default=ParameterString)?;
	public ParameterStringTypeElements getParameterStringTypeAccess() {
		return pParameterStringType;
	}
	
	public ParserRule getParameterStringTypeRule() {
		return getParameterStringTypeAccess().getRule();
	}
	
	//ParameterDoubleType returns ros::ParameterDoubleType:
	//    {ros::ParameterDoubleType}
	//    'Double'
	//    ('default' default=ParameterDouble)?;
	public ParameterDoubleTypeElements getParameterDoubleTypeAccess() {
		return pParameterDoubleType;
	}
	
	public ParserRule getParameterDoubleTypeRule() {
		return getParameterDoubleTypeAccess().getRule();
	}
	
	//ParameterDateType returns ros::ParameterDateType:
	//    {ros::ParameterDateType}
	//    'Date'
	//    ('default' default=ParameterDate)?;
	public ParameterDateTypeElements getParameterDateTypeAccess() {
		return pParameterDateType;
	}
	
	public ParserRule getParameterDateTypeRule() {
		return getParameterDateTypeAccess().getRule();
	}
	
	//ParameterBooleanType returns ros::ParameterBooleanType:
	//    {ros::ParameterBooleanType}
	//    'Boolean'
	//    ('default' default=ParameterBoolean)?;
	public ParameterBooleanTypeElements getParameterBooleanTypeAccess() {
		return pParameterBooleanType;
	}
	
	public ParserRule getParameterBooleanTypeRule() {
		return getParameterBooleanTypeAccess().getRule();
	}
	
	//ParameterBase64Type returns ros::ParameterBase64Type:
	//    {ros::ParameterBase64Type}
	//    'Base64'
	//    ('default' default=ParameterBase64)?;
	public ParameterBase64TypeElements getParameterBase64TypeAccess() {
		return pParameterBase64Type;
	}
	
	public ParserRule getParameterBase64TypeRule() {
		return getParameterBase64TypeAccess().getRule();
	}
	
	//ParameterAnyType returns ros::ParameterAnyType:
	//    {ros::ParameterAnyType}
	//    'Any'
	//    ('default' default=ParameterAny)?;
	public ParameterAnyTypeElements getParameterAnyTypeAccess() {
		return pParameterAnyType;
	}
	
	public ParserRule getParameterAnyTypeRule() {
		return getParameterAnyTypeAccess().getRule();
	}
	
	//ParameterArrayType returns ros::ParameterArrayType:
	//    'Array'
	//    '{'
	//        'type' type=ParameterType
	//        ('default' default=ParameterList)?
	//    '}';
	public ParameterArrayTypeElements getParameterArrayTypeAccess() {
		return pParameterArrayType;
	}
	
	public ParserRule getParameterArrayTypeRule() {
		return getParameterArrayTypeAccess().getRule();
	}
	
	//ParameterList returns ros::ParameterSequence:
	//    {ros::ParameterSequence}
	//        '{'    value+=ParameterValue ( ',' value+=ParameterValue )* '}'
	//;
	public ParameterListElements getParameterListAccess() {
		return pParameterList;
	}
	
	public ParserRule getParameterListRule() {
		return getParameterListAccess().getRule();
	}
	
	//ParameterAny returns ros::ParameterAny:
	//    {ros::ParameterAny}
	//    'ParameterAny'
	//    '{'
	//        ('value' value=EString)?
	//    '}';
	public ParameterAnyElements getParameterAnyAccess() {
		return pParameterAny;
	}
	
	public ParserRule getParameterAnyRule() {
		return getParameterAnyAccess().getRule();
	}
	
	//ParameterString returns ros::ParameterString:
	//    value=EString
	//;
	public ParameterStringElements getParameterStringAccess() {
		return pParameterString;
	}
	
	public ParserRule getParameterStringRule() {
		return getParameterStringAccess().getRule();
	}
	
	//ParameterBase64 returns ros::ParameterBase64:
	//    value=Base64Binary
	//;
	public ParameterBase64Elements getParameterBase64Access() {
		return pParameterBase64;
	}
	
	public ParserRule getParameterBase64Rule() {
		return getParameterBase64Access().getRule();
	}
	
	//ParameterInteger returns ros::ParameterInteger:
	//    value=Integer0
	//;
	public ParameterIntegerElements getParameterIntegerAccess() {
		return pParameterInteger;
	}
	
	public ParserRule getParameterIntegerRule() {
		return getParameterIntegerAccess().getRule();
	}
	
	//ParameterDouble returns ros::ParameterDouble:
	//    value=Double0
	//;
	public ParameterDoubleElements getParameterDoubleAccess() {
		return pParameterDouble;
	}
	
	public ParserRule getParameterDoubleRule() {
		return getParameterDoubleAccess().getRule();
	}
	
	//ParameterBoolean returns ros::ParameterBoolean:
	//    value=boolean0
	//;
	public ParameterBooleanElements getParameterBooleanAccess() {
		return pParameterBoolean;
	}
	
	public ParserRule getParameterBooleanRule() {
		return getParameterBooleanAccess().getRule();
	}
	
	//ParameterDate returns ros::ParameterDate:
	//    value=DateTime0
	//    ;
	public ParameterDateElements getParameterDateAccess() {
		return pParameterDate;
	}
	
	public ParserRule getParameterDateRule() {
		return getParameterDateAccess().getRule();
	}
	
	//ParameterStruct returns ros::ParameterStruct:
	//    {ros::ParameterStruct}
	//        ('{' value+=ParameterStructMember  ( "," '{' value+=ParameterStructMember '}')*  '}' )?
	//;
	public ParameterStructElements getParameterStructAccess() {
		return pParameterStruct;
	}
	
	public ParserRule getParameterStructRule() {
		return getParameterStructAccess().getRule();
	}
	
	//ParameterStructMember returns ros::ParameterStructMember:
	//    name=EString
	//    '{'
	//        'value' value=ParameterValue
	//    '}';
	public ParameterStructMemberElements getParameterStructMemberAccess() {
		return pParameterStructMember;
	}
	
	public ParserRule getParameterStructMemberRule() {
		return getParameterStructMemberAccess().getRule();
	}
	
	//ParameterStructTypeMember returns ros::ParameterStructTypeMember:
	//        name=EString
	//        type=ParameterType
	//    ;
	public ParameterStructTypeMemberElements getParameterStructTypeMemberAccess() {
		return pParameterStructTypeMember;
	}
	
	public ParserRule getParameterStructTypeMemberRule() {
		return getParameterStructTypeMemberAccess().getRule();
	}
	
	////PARAMETERS PRIMITIVES TYPES
	//terminal fragment DIGIT: '0'..'9';
	public TerminalRule getDIGITRule() {
		return tDIGIT;
	}
	
	//terminal BINARY: ('0b'|'0B')('0'|'1')+;
	public TerminalRule getBINARYRule() {
		return tBINARY;
	}
	
	//terminal BOOLEAN: 'true'|'false';
	public TerminalRule getBOOLEANRule() {
		return tBOOLEAN;
	}
	
	//terminal DOUBLE returns ecore::EDouble: DECINT (('.' DIGIT*) | (('.' DIGIT*)? ('E'|'e') ('-'|'+')? DECINT));
	public TerminalRule getDOUBLERule() {
		return tDOUBLE;
	}
	
	//  // Use terminal to avoid 'e' turning into a keyword
	//terminal DECINT: '0' | ('1'..'9' DIGIT*) | ('-''0'..'9' DIGIT*) ;
	public TerminalRule getDECINTRule() {
		return tDECINT;
	}
	
	//terminal DAY:'1'..'9' | '1'..'3' '0'..'9';
	public TerminalRule getDAYRule() {
		return tDAY;
	}
	
	//terminal MONTH:'1'..'9' | '1' '0'..'2';
	public TerminalRule getMONTHRule() {
		return tMONTH;
	}
	
	//terminal YEAR:'0'..'2' '0'..'9' '0'..'9' '0'..'9';
	public TerminalRule getYEARRule() {
		return tYEAR;
	}
	
	//terminal HOUR: ('0'..'1')('0'..'9') | ('2')('0'..'3');
	public TerminalRule getHOURRule() {
		return tHOUR;
	}
	
	//terminal MIN_SEC:('0'..'5')('0'..'9');
	public TerminalRule getMIN_SECRule() {
		return tMIN_SEC;
	}
	
	//terminal DATE_TIME: YEAR'-'MONTH'-'DAY'T'HOUR':'MIN_SEC':'MIN_SEC;
	public TerminalRule getDATE_TIMERule() {
		return tDATE_TIME;
	}
	
	//Base64Binary returns type::Base64Binary:
	//    BINARY ;
	public Base64BinaryElements getBase64BinaryAccess() {
		return pBase64Binary;
	}
	
	public ParserRule getBase64BinaryRule() {
		return getBase64BinaryAccess().getRule();
	}
	
	//boolean0 returns type::Boolean:
	//    BOOLEAN;
	public Boolean0Elements getBoolean0Access() {
		return pBoolean0;
	}
	
	public ParserRule getBoolean0Rule() {
		return getBoolean0Access().getRule();
	}
	
	//Double0 returns type::Double:
	//    DOUBLE;
	public Double0Elements getDouble0Access() {
		return pDouble0;
	}
	
	public ParserRule getDouble0Rule() {
		return getDouble0Access().getRule();
	}
	
	//Integer0 returns type::Int:
	//    DECINT;
	public Integer0Elements getInteger0Access() {
		return pInteger0;
	}
	
	public ParserRule getInteger0Rule() {
		return getInteger0Access().getRule();
	}
	
	//DateTime0 returns type::DateTime:
	//    DATE_TIME;
	public DateTime0Elements getDateTime0Access() {
		return pDateTime0;
	}
	
	public ParserRule getDateTime0Rule() {
		return getDateTime0Access().getRule();
	}
	
	////NAMESPACES
	//Namespace returns ros::Namespace:
	//    GlobalNamespace | RelativeNamespace_Impl | PrivateNamespace;
	public NamespaceElements getNamespaceAccess() {
		return pNamespace;
	}
	
	public ParserRule getNamespaceRule() {
		return getNamespaceAccess().getRule();
	}
	
	//GlobalNamespace returns ros::GlobalNamespace:
	//    {ros::GlobalNamespace}
	//    'GlobalNamespace'
	//    '{'
	//        ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	//    '}';
	public GlobalNamespaceElements getGlobalNamespaceAccess() {
		return pGlobalNamespace;
	}
	
	public ParserRule getGlobalNamespaceRule() {
		return getGlobalNamespaceAccess().getRule();
	}
	
	//RelativeNamespace_Impl returns ros::RelativeNamespace:
	//    {ros::RelativeNamespace}
	//    'RelativeNamespace'
	//    '{'
	//        ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	//    '}';
	public RelativeNamespace_ImplElements getRelativeNamespace_ImplAccess() {
		return pRelativeNamespace_Impl;
	}
	
	public ParserRule getRelativeNamespace_ImplRule() {
		return getRelativeNamespace_ImplAccess().getRule();
	}
	
	//PrivateNamespace returns ros::PrivateNamespace:
	//    {ros::PrivateNamespace}
	//    'PrivateNamespace'
	//    '{'
	//        ('parts' '{' parts+=GraphName ( "," parts+=GraphName)* '}' )?
	//    '}';
	public PrivateNamespaceElements getPrivateNamespaceAccess() {
		return pPrivateNamespace;
	}
	
	public ParserRule getPrivateNamespaceRule() {
		return getPrivateNamespaceAccess().getRule();
	}
	
	//GraphName returns ros::GraphName:
	//    'GraphName' ;
	public GraphNameElements getGraphNameAccess() {
		return pGraphName;
	}
	
	public ParserRule getGraphNameRule() {
		return getGraphNameAccess().getRule();
	}
	
	//terminal ID: '^'?('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt: ('0'..'9')+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//            '"' ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|'"') )* '"' |
	//            "'" ( '\\' . /* 'b'|'t'|'n'|'f'|'r'|'u'|'"'|"'"|'\\' */ | !('\\'|"'") )* "'"
	//        ;
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT : '/*' -> '*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal WS         : (' '|'\t'|'\r'|'\n')+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER: .;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
